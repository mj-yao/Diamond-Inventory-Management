//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DiamondTransaction {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DevTHLStoreDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DevTHLStoreDataSet : global::System.Data.DataSet {
        
        private THXADiamondLotDataTable tableTHXADiamondLot;
        
        private THXADiamondPriceStockHistoryDataTable tableTHXADiamondPriceStockHistory;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DevTHLStoreDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected DevTHLStoreDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["THXADiamondLot"] != null)) {
                    base.Tables.Add(new THXADiamondLotDataTable(ds.Tables["THXADiamondLot"]));
                }
                if ((ds.Tables["THXADiamondPriceStockHistory"] != null)) {
                    base.Tables.Add(new THXADiamondPriceStockHistoryDataTable(ds.Tables["THXADiamondPriceStockHistory"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THXADiamondLotDataTable THXADiamondLot {
            get {
                return this.tableTHXADiamondLot;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THXADiamondPriceStockHistoryDataTable THXADiamondPriceStockHistory {
            get {
                return this.tableTHXADiamondPriceStockHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DevTHLStoreDataSet cln = ((DevTHLStoreDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["THXADiamondLot"] != null)) {
                    base.Tables.Add(new THXADiamondLotDataTable(ds.Tables["THXADiamondLot"]));
                }
                if ((ds.Tables["THXADiamondPriceStockHistory"] != null)) {
                    base.Tables.Add(new THXADiamondPriceStockHistoryDataTable(ds.Tables["THXADiamondPriceStockHistory"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTHXADiamondLot = ((THXADiamondLotDataTable)(base.Tables["THXADiamondLot"]));
            if ((initTable == true)) {
                if ((this.tableTHXADiamondLot != null)) {
                    this.tableTHXADiamondLot.InitVars();
                }
            }
            this.tableTHXADiamondPriceStockHistory = ((THXADiamondPriceStockHistoryDataTable)(base.Tables["THXADiamondPriceStockHistory"]));
            if ((initTable == true)) {
                if ((this.tableTHXADiamondPriceStockHistory != null)) {
                    this.tableTHXADiamondPriceStockHistory.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DevTHLStoreDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DevTHLStoreDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTHXADiamondLot = new THXADiamondLotDataTable();
            base.Tables.Add(this.tableTHXADiamondLot);
            this.tableTHXADiamondPriceStockHistory = new THXADiamondPriceStockHistoryDataTable();
            base.Tables.Add(this.tableTHXADiamondPriceStockHistory);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeTHXADiamondLot() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeTHXADiamondPriceStockHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DevTHLStoreDataSet ds = new DevTHLStoreDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void THXADiamondLotRowChangeEventHandler(object sender, THXADiamondLotRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void THXADiamondPriceStockHistoryRowChangeEventHandler(object sender, THXADiamondPriceStockHistoryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THXADiamondLotDataTable : global::System.Data.TypedTableBase<THXADiamondLotRow> {
            
            private global::System.Data.DataColumn columnLotID;
            
            private global::System.Data.DataColumn columnLotName;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemDescription;
            
            private global::System.Data.DataColumn columnItemDescription1;
            
            private global::System.Data.DataColumn columnParcelOrStone;
            
            private global::System.Data.DataColumn columnHoldingType;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnStockStatus;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnShape;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnClarity;
            
            private global::System.Data.DataColumn columnCut;
            
            private global::System.Data.DataColumn columnPolish;
            
            private global::System.Data.DataColumn columnSymmetry;
            
            private global::System.Data.DataColumn columnFluorescence;
            
            private global::System.Data.DataColumn columnInscription;
            
            private global::System.Data.DataColumn columnCertificateID;
            
            private global::System.Data.DataColumn columnCertificateLabName;
            
            private global::System.Data.DataColumn columnCertificateType;
            
            private global::System.Data.DataColumn columnCertificateNo;
            
            private global::System.Data.DataColumn columnCertificateDate;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnTotalCost;
            
            private global::System.Data.DataColumn columnListCostDiscount;
            
            private global::System.Data.DataColumn columnList;
            
            private global::System.Data.DataColumn columnTotalList;
            
            private global::System.Data.DataColumn columnListSaleDiscount;
            
            private global::System.Data.DataColumn columnSale;
            
            private global::System.Data.DataColumn columnTotalSale;
            
            private global::System.Data.DataColumn columnGBPSale;
            
            private global::System.Data.DataColumn columnGBPTotalSale;
            
            private global::System.Data.DataColumn columnOutList;
            
            private global::System.Data.DataColumn columnListOutDiscount;
            
            private global::System.Data.DataColumn columnOutPrice;
            
            private global::System.Data.DataColumn columnOutTotalPrice;
            
            private global::System.Data.DataColumn columnGBPOutPrice;
            
            private global::System.Data.DataColumn columnGBPOutTotalPrice;
            
            private global::System.Data.DataColumn columnLocationAccountCode;
            
            private global::System.Data.DataColumn columnLocationAccountName;
            
            private global::System.Data.DataColumn columnVendorAccountCode;
            
            private global::System.Data.DataColumn columnVendorAccountName;
            
            private global::System.Data.DataColumn columnWeightLoss;
            
            private global::System.Data.DataColumn columnScrapWeight;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnDateTime_Created;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnLastStockStatusUpdate;
            
            private global::System.Data.DataColumn columnReferenceDocCode;
            
            private global::System.Data.DataColumn columnLastTrsID;
            
            private global::System.Data.DataColumn columnLastTrsDate;
            
            private global::System.Data.DataColumn columnLastTrsTypeID;
            
            private global::System.Data.DataColumn columnLastTrsTypeDesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondLotDataTable() {
                this.TableName = "THXADiamondLot";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal THXADiamondLotDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected THXADiamondLotDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LotIDColumn {
                get {
                    return this.columnLotID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LotNameColumn {
                get {
                    return this.columnLotName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ItemDescription1Column {
                get {
                    return this.columnItemDescription1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ParcelOrStoneColumn {
                get {
                    return this.columnParcelOrStone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HoldingTypeColumn {
                get {
                    return this.columnHoldingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StockStatusColumn {
                get {
                    return this.columnStockStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ShapeColumn {
                get {
                    return this.columnShape;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClarityColumn {
                get {
                    return this.columnClarity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CutColumn {
                get {
                    return this.columnCut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PolishColumn {
                get {
                    return this.columnPolish;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SymmetryColumn {
                get {
                    return this.columnSymmetry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FluorescenceColumn {
                get {
                    return this.columnFluorescence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InscriptionColumn {
                get {
                    return this.columnInscription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateIDColumn {
                get {
                    return this.columnCertificateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateLabNameColumn {
                get {
                    return this.columnCertificateLabName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateTypeColumn {
                get {
                    return this.columnCertificateType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateNoColumn {
                get {
                    return this.columnCertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateDateColumn {
                get {
                    return this.columnCertificateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalCostColumn {
                get {
                    return this.columnTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ListCostDiscountColumn {
                get {
                    return this.columnListCostDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ListColumn {
                get {
                    return this.columnList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalListColumn {
                get {
                    return this.columnTotalList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ListSaleDiscountColumn {
                get {
                    return this.columnListSaleDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SaleColumn {
                get {
                    return this.columnSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalSaleColumn {
                get {
                    return this.columnTotalSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GBPSaleColumn {
                get {
                    return this.columnGBPSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GBPTotalSaleColumn {
                get {
                    return this.columnGBPTotalSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OutListColumn {
                get {
                    return this.columnOutList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ListOutDiscountColumn {
                get {
                    return this.columnListOutDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OutPriceColumn {
                get {
                    return this.columnOutPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OutTotalPriceColumn {
                get {
                    return this.columnOutTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GBPOutPriceColumn {
                get {
                    return this.columnGBPOutPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GBPOutTotalPriceColumn {
                get {
                    return this.columnGBPOutTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocationAccountCodeColumn {
                get {
                    return this.columnLocationAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocationAccountNameColumn {
                get {
                    return this.columnLocationAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VendorAccountCodeColumn {
                get {
                    return this.columnVendorAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VendorAccountNameColumn {
                get {
                    return this.columnVendorAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeightLossColumn {
                get {
                    return this.columnWeightLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ScrapWeightColumn {
                get {
                    return this.columnScrapWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DateTime_CreatedColumn {
                get {
                    return this.columnDateTime_Created;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastStockStatusUpdateColumn {
                get {
                    return this.columnLastStockStatusUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReferenceDocCodeColumn {
                get {
                    return this.columnReferenceDocCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastTrsIDColumn {
                get {
                    return this.columnLastTrsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastTrsDateColumn {
                get {
                    return this.columnLastTrsDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastTrsTypeIDColumn {
                get {
                    return this.columnLastTrsTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastTrsTypeDescColumn {
                get {
                    return this.columnLastTrsTypeDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondLotRow this[int index] {
                get {
                    return ((THXADiamondLotRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event THXADiamondLotRowChangeEventHandler THXADiamondLotRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event THXADiamondLotRowChangeEventHandler THXADiamondLotRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event THXADiamondLotRowChangeEventHandler THXADiamondLotRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event THXADiamondLotRowChangeEventHandler THXADiamondLotRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddTHXADiamondLotRow(THXADiamondLotRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondLotRow AddTHXADiamondLotRow(
                        int LotID, 
                        string LotName, 
                        int ItemID, 
                        string ItemName, 
                        string ItemDescription, 
                        string ItemDescription1, 
                        string ParcelOrStone, 
                        string HoldingType, 
                        string Status, 
                        string StockStatus, 
                        decimal Weight, 
                        string Shape, 
                        string Size, 
                        string Color, 
                        string Clarity, 
                        string Cut, 
                        string Polish, 
                        string Symmetry, 
                        string Fluorescence, 
                        string Inscription, 
                        int CertificateID, 
                        string CertificateLabName, 
                        string CertificateType, 
                        string CertificateNo, 
                        System.DateTime CertificateDate, 
                        decimal Cost, 
                        decimal TotalCost, 
                        decimal ListCostDiscount, 
                        decimal List, 
                        decimal TotalList, 
                        decimal ListSaleDiscount, 
                        decimal Sale, 
                        decimal TotalSale, 
                        decimal GBPSale, 
                        decimal GBPTotalSale, 
                        decimal OutList, 
                        decimal ListOutDiscount, 
                        decimal OutPrice, 
                        decimal OutTotalPrice, 
                        decimal GBPOutPrice, 
                        decimal GBPOutTotalPrice, 
                        string LocationAccountCode, 
                        string LocationAccountName, 
                        string VendorAccountCode, 
                        string VendorAccountName, 
                        decimal WeightLoss, 
                        decimal ScrapWeight, 
                        string Remark, 
                        string Created_By, 
                        System.DateTime DateTime_Created, 
                        string Modified_By, 
                        System.DateTime LastStockStatusUpdate, 
                        string ReferenceDocCode, 
                        int LastTrsID, 
                        System.DateTime LastTrsDate, 
                        int LastTrsTypeID, 
                        string LastTrsTypeDesc) {
                THXADiamondLotRow rowTHXADiamondLotRow = ((THXADiamondLotRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LotID,
                        LotName,
                        ItemID,
                        ItemName,
                        ItemDescription,
                        ItemDescription1,
                        ParcelOrStone,
                        HoldingType,
                        Status,
                        StockStatus,
                        Weight,
                        Shape,
                        Size,
                        Color,
                        Clarity,
                        Cut,
                        Polish,
                        Symmetry,
                        Fluorescence,
                        Inscription,
                        CertificateID,
                        CertificateLabName,
                        CertificateType,
                        CertificateNo,
                        CertificateDate,
                        Cost,
                        TotalCost,
                        ListCostDiscount,
                        List,
                        TotalList,
                        ListSaleDiscount,
                        Sale,
                        TotalSale,
                        GBPSale,
                        GBPTotalSale,
                        OutList,
                        ListOutDiscount,
                        OutPrice,
                        OutTotalPrice,
                        GBPOutPrice,
                        GBPOutTotalPrice,
                        LocationAccountCode,
                        LocationAccountName,
                        VendorAccountCode,
                        VendorAccountName,
                        WeightLoss,
                        ScrapWeight,
                        Remark,
                        Created_By,
                        DateTime_Created,
                        Modified_By,
                        LastStockStatusUpdate,
                        ReferenceDocCode,
                        LastTrsID,
                        LastTrsDate,
                        LastTrsTypeID,
                        LastTrsTypeDesc};
                rowTHXADiamondLotRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTHXADiamondLotRow);
                return rowTHXADiamondLotRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondLotRow FindByLotID(int LotID) {
                return ((THXADiamondLotRow)(this.Rows.Find(new object[] {
                            LotID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                THXADiamondLotDataTable cln = ((THXADiamondLotDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new THXADiamondLotDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnLotID = base.Columns["LotID"];
                this.columnLotName = base.Columns["LotName"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnItemDescription1 = base.Columns["ItemDescription1"];
                this.columnParcelOrStone = base.Columns["ParcelOrStone"];
                this.columnHoldingType = base.Columns["HoldingType"];
                this.columnStatus = base.Columns["Status"];
                this.columnStockStatus = base.Columns["StockStatus"];
                this.columnWeight = base.Columns["Weight"];
                this.columnShape = base.Columns["Shape"];
                this.columnSize = base.Columns["Size"];
                this.columnColor = base.Columns["Color"];
                this.columnClarity = base.Columns["Clarity"];
                this.columnCut = base.Columns["Cut"];
                this.columnPolish = base.Columns["Polish"];
                this.columnSymmetry = base.Columns["Symmetry"];
                this.columnFluorescence = base.Columns["Fluorescence"];
                this.columnInscription = base.Columns["Inscription"];
                this.columnCertificateID = base.Columns["CertificateID"];
                this.columnCertificateLabName = base.Columns["CertificateLabName"];
                this.columnCertificateType = base.Columns["CertificateType"];
                this.columnCertificateNo = base.Columns["CertificateNo"];
                this.columnCertificateDate = base.Columns["CertificateDate"];
                this.columnCost = base.Columns["Cost"];
                this.columnTotalCost = base.Columns["TotalCost"];
                this.columnListCostDiscount = base.Columns["ListCostDiscount"];
                this.columnList = base.Columns["List"];
                this.columnTotalList = base.Columns["TotalList"];
                this.columnListSaleDiscount = base.Columns["ListSaleDiscount"];
                this.columnSale = base.Columns["Sale"];
                this.columnTotalSale = base.Columns["TotalSale"];
                this.columnGBPSale = base.Columns["GBPSale"];
                this.columnGBPTotalSale = base.Columns["GBPTotalSale"];
                this.columnOutList = base.Columns["OutList"];
                this.columnListOutDiscount = base.Columns["ListOutDiscount"];
                this.columnOutPrice = base.Columns["OutPrice"];
                this.columnOutTotalPrice = base.Columns["OutTotalPrice"];
                this.columnGBPOutPrice = base.Columns["GBPOutPrice"];
                this.columnGBPOutTotalPrice = base.Columns["GBPOutTotalPrice"];
                this.columnLocationAccountCode = base.Columns["LocationAccountCode"];
                this.columnLocationAccountName = base.Columns["LocationAccountName"];
                this.columnVendorAccountCode = base.Columns["VendorAccountCode"];
                this.columnVendorAccountName = base.Columns["VendorAccountName"];
                this.columnWeightLoss = base.Columns["WeightLoss"];
                this.columnScrapWeight = base.Columns["ScrapWeight"];
                this.columnRemark = base.Columns["Remark"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnDateTime_Created = base.Columns["DateTime_Created"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnLastStockStatusUpdate = base.Columns["LastStockStatusUpdate"];
                this.columnReferenceDocCode = base.Columns["ReferenceDocCode"];
                this.columnLastTrsID = base.Columns["LastTrsID"];
                this.columnLastTrsDate = base.Columns["LastTrsDate"];
                this.columnLastTrsTypeID = base.Columns["LastTrsTypeID"];
                this.columnLastTrsTypeDesc = base.Columns["LastTrsTypeDesc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnLotID = new global::System.Data.DataColumn("LotID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotID);
                this.columnLotName = new global::System.Data.DataColumn("LotName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotName);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemDescription = new global::System.Data.DataColumn("ItemDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnItemDescription1 = new global::System.Data.DataColumn("ItemDescription1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription1);
                this.columnParcelOrStone = new global::System.Data.DataColumn("ParcelOrStone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelOrStone);
                this.columnHoldingType = new global::System.Data.DataColumn("HoldingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldingType);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnStockStatus = new global::System.Data.DataColumn("StockStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockStatus);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnShape = new global::System.Data.DataColumn("Shape", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShape);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnClarity = new global::System.Data.DataColumn("Clarity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClarity);
                this.columnCut = new global::System.Data.DataColumn("Cut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCut);
                this.columnPolish = new global::System.Data.DataColumn("Polish", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolish);
                this.columnSymmetry = new global::System.Data.DataColumn("Symmetry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymmetry);
                this.columnFluorescence = new global::System.Data.DataColumn("Fluorescence", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluorescence);
                this.columnInscription = new global::System.Data.DataColumn("Inscription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInscription);
                this.columnCertificateID = new global::System.Data.DataColumn("CertificateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateID);
                this.columnCertificateLabName = new global::System.Data.DataColumn("CertificateLabName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateLabName);
                this.columnCertificateType = new global::System.Data.DataColumn("CertificateType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateType);
                this.columnCertificateNo = new global::System.Data.DataColumn("CertificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateNo);
                this.columnCertificateDate = new global::System.Data.DataColumn("CertificateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateDate);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnTotalCost = new global::System.Data.DataColumn("TotalCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCost);
                this.columnListCostDiscount = new global::System.Data.DataColumn("ListCostDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListCostDiscount);
                this.columnList = new global::System.Data.DataColumn("List", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnList);
                this.columnTotalList = new global::System.Data.DataColumn("TotalList", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalList);
                this.columnListSaleDiscount = new global::System.Data.DataColumn("ListSaleDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListSaleDiscount);
                this.columnSale = new global::System.Data.DataColumn("Sale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale);
                this.columnTotalSale = new global::System.Data.DataColumn("TotalSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSale);
                this.columnGBPSale = new global::System.Data.DataColumn("GBPSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBPSale);
                this.columnGBPTotalSale = new global::System.Data.DataColumn("GBPTotalSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBPTotalSale);
                this.columnOutList = new global::System.Data.DataColumn("OutList", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutList);
                this.columnListOutDiscount = new global::System.Data.DataColumn("ListOutDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListOutDiscount);
                this.columnOutPrice = new global::System.Data.DataColumn("OutPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutPrice);
                this.columnOutTotalPrice = new global::System.Data.DataColumn("OutTotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutTotalPrice);
                this.columnGBPOutPrice = new global::System.Data.DataColumn("GBPOutPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBPOutPrice);
                this.columnGBPOutTotalPrice = new global::System.Data.DataColumn("GBPOutTotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBPOutTotalPrice);
                this.columnLocationAccountCode = new global::System.Data.DataColumn("LocationAccountCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationAccountCode);
                this.columnLocationAccountName = new global::System.Data.DataColumn("LocationAccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationAccountName);
                this.columnVendorAccountCode = new global::System.Data.DataColumn("VendorAccountCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAccountCode);
                this.columnVendorAccountName = new global::System.Data.DataColumn("VendorAccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAccountName);
                this.columnWeightLoss = new global::System.Data.DataColumn("WeightLoss", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightLoss);
                this.columnScrapWeight = new global::System.Data.DataColumn("ScrapWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScrapWeight);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnDateTime_Created = new global::System.Data.DataColumn("DateTime_Created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime_Created);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnLastStockStatusUpdate = new global::System.Data.DataColumn("LastStockStatusUpdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastStockStatusUpdate);
                this.columnReferenceDocCode = new global::System.Data.DataColumn("ReferenceDocCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceDocCode);
                this.columnLastTrsID = new global::System.Data.DataColumn("LastTrsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTrsID);
                this.columnLastTrsDate = new global::System.Data.DataColumn("LastTrsDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTrsDate);
                this.columnLastTrsTypeID = new global::System.Data.DataColumn("LastTrsTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTrsTypeID);
                this.columnLastTrsTypeDesc = new global::System.Data.DataColumn("LastTrsTypeDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTrsTypeDesc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLotID}, true));
                this.columnLotID.AllowDBNull = false;
                this.columnLotID.Unique = true;
                this.columnLotName.AllowDBNull = false;
                this.columnLotName.MaxLength = 50;
                this.columnItemID.AllowDBNull = false;
                this.columnItemName.AllowDBNull = false;
                this.columnItemName.MaxLength = 50;
                this.columnItemDescription.AllowDBNull = false;
                this.columnItemDescription.MaxLength = 250;
                this.columnItemDescription1.AllowDBNull = false;
                this.columnItemDescription1.MaxLength = 250;
                this.columnParcelOrStone.AllowDBNull = false;
                this.columnParcelOrStone.MaxLength = 1;
                this.columnHoldingType.AllowDBNull = false;
                this.columnHoldingType.MaxLength = 1;
                this.columnStatus.AllowDBNull = false;
                this.columnStatus.MaxLength = 20;
                this.columnStockStatus.AllowDBNull = false;
                this.columnStockStatus.MaxLength = 20;
                this.columnWeight.AllowDBNull = false;
                this.columnShape.AllowDBNull = false;
                this.columnShape.MaxLength = 20;
                this.columnSize.AllowDBNull = false;
                this.columnSize.MaxLength = 20;
                this.columnColor.AllowDBNull = false;
                this.columnColor.MaxLength = 20;
                this.columnClarity.AllowDBNull = false;
                this.columnClarity.MaxLength = 20;
                this.columnCut.AllowDBNull = false;
                this.columnCut.MaxLength = 20;
                this.columnPolish.AllowDBNull = false;
                this.columnPolish.MaxLength = 20;
                this.columnSymmetry.AllowDBNull = false;
                this.columnSymmetry.MaxLength = 20;
                this.columnFluorescence.AllowDBNull = false;
                this.columnFluorescence.MaxLength = 20;
                this.columnInscription.MaxLength = 200;
                this.columnCertificateID.AllowDBNull = false;
                this.columnCertificateLabName.AllowDBNull = false;
                this.columnCertificateLabName.MaxLength = 50;
                this.columnCertificateType.AllowDBNull = false;
                this.columnCertificateType.MaxLength = 20;
                this.columnCertificateNo.AllowDBNull = false;
                this.columnCertificateNo.MaxLength = 20;
                this.columnCost.AllowDBNull = false;
                this.columnTotalCost.AllowDBNull = false;
                this.columnListCostDiscount.AllowDBNull = false;
                this.columnList.AllowDBNull = false;
                this.columnTotalList.AllowDBNull = false;
                this.columnListSaleDiscount.AllowDBNull = false;
                this.columnSale.AllowDBNull = false;
                this.columnTotalSale.AllowDBNull = false;
                this.columnGBPSale.AllowDBNull = false;
                this.columnGBPTotalSale.AllowDBNull = false;
                this.columnOutList.AllowDBNull = false;
                this.columnListOutDiscount.AllowDBNull = false;
                this.columnOutPrice.AllowDBNull = false;
                this.columnOutTotalPrice.AllowDBNull = false;
                this.columnGBPOutPrice.AllowDBNull = false;
                this.columnGBPOutTotalPrice.AllowDBNull = false;
                this.columnLocationAccountCode.MaxLength = 20;
                this.columnLocationAccountName.MaxLength = 100;
                this.columnVendorAccountCode.MaxLength = 20;
                this.columnVendorAccountName.MaxLength = 100;
                this.columnWeightLoss.AllowDBNull = false;
                this.columnScrapWeight.AllowDBNull = false;
                this.columnRemark.MaxLength = 1000;
                this.columnCreated_By.AllowDBNull = false;
                this.columnCreated_By.MaxLength = 30;
                this.columnModified_By.AllowDBNull = false;
                this.columnModified_By.MaxLength = 30;
                this.columnReferenceDocCode.AllowDBNull = false;
                this.columnReferenceDocCode.MaxLength = 50;
                this.columnLastTrsID.AllowDBNull = false;
                this.columnLastTrsTypeID.AllowDBNull = false;
                this.columnLastTrsTypeDesc.AllowDBNull = false;
                this.columnLastTrsTypeDesc.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondLotRow NewTHXADiamondLotRow() {
                return ((THXADiamondLotRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new THXADiamondLotRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(THXADiamondLotRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THXADiamondLotRowChanged != null)) {
                    this.THXADiamondLotRowChanged(this, new THXADiamondLotRowChangeEvent(((THXADiamondLotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THXADiamondLotRowChanging != null)) {
                    this.THXADiamondLotRowChanging(this, new THXADiamondLotRowChangeEvent(((THXADiamondLotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THXADiamondLotRowDeleted != null)) {
                    this.THXADiamondLotRowDeleted(this, new THXADiamondLotRowChangeEvent(((THXADiamondLotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THXADiamondLotRowDeleting != null)) {
                    this.THXADiamondLotRowDeleting(this, new THXADiamondLotRowChangeEvent(((THXADiamondLotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveTHXADiamondLotRow(THXADiamondLotRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DevTHLStoreDataSet ds = new DevTHLStoreDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THXADiamondLotDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THXADiamondPriceStockHistoryDataTable : global::System.Data.TypedTableBase<THXADiamondPriceStockHistoryRow> {
            
            private global::System.Data.DataColumn columnTrsID;
            
            private global::System.Data.DataColumn columnTrsTypeID;
            
            private global::System.Data.DataColumn columnTrsTypeDesc;
            
            private global::System.Data.DataColumn columnTrsDate;
            
            private global::System.Data.DataColumn columnReferenceCode;
            
            private global::System.Data.DataColumn columnReferenceSrNo;
            
            private global::System.Data.DataColumn columnLotID;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnLotName;
            
            private global::System.Data.DataColumn columnParcelOrStone;
            
            private global::System.Data.DataColumn columnNaturalOrLabGrown;
            
            private global::System.Data.DataColumn columnCertificateID;
            
            private global::System.Data.DataColumn columnCertificateLabName;
            
            private global::System.Data.DataColumn columnCertificateType;
            
            private global::System.Data.DataColumn columnCertificateNo;
            
            private global::System.Data.DataColumn columnShape;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnClarity;
            
            private global::System.Data.DataColumn columnOriginalWeight;
            
            private global::System.Data.DataColumn columnWeightIn;
            
            private global::System.Data.DataColumn columnWeightOut;
            
            private global::System.Data.DataColumn columnWeightBalance;
            
            private global::System.Data.DataColumn columnWeightLoss;
            
            private global::System.Data.DataColumn columnScrapWeight;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnTrsTotalCost;
            
            private global::System.Data.DataColumn columnParcelAvgCost;
            
            private global::System.Data.DataColumn columnListCostDiscount;
            
            private global::System.Data.DataColumn columnList;
            
            private global::System.Data.DataColumn columnTotalList;
            
            private global::System.Data.DataColumn columnListSaleDiscount;
            
            private global::System.Data.DataColumn columnSale;
            
            private global::System.Data.DataColumn columnTotalSale;
            
            private global::System.Data.DataColumn columnGBPSale;
            
            private global::System.Data.DataColumn columnGBPTotalSale;
            
            private global::System.Data.DataColumn columnOutList;
            
            private global::System.Data.DataColumn columnListOutDiscount;
            
            private global::System.Data.DataColumn columnOutPrice;
            
            private global::System.Data.DataColumn columnOutTotalPrice;
            
            private global::System.Data.DataColumn columnGBPOutPrice;
            
            private global::System.Data.DataColumn columnGBPOutTotalPrice;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnLocationAccountCode;
            
            private global::System.Data.DataColumn columnLocationAccountName;
            
            private global::System.Data.DataColumn columnVendorAccountCode;
            
            private global::System.Data.DataColumn columnVendorAccountName;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnTotalCost;
            
            private global::System.Data.DataColumn columnTrsDocID;
            
            private global::System.Data.DataColumn columnTrsDocLine;
            
            private global::System.Data.DataColumn columnDocTypeID;
            
            private global::System.Data.DataColumn columnDocID;
            
            private global::System.Data.DataColumn columnDocLine;
            
            private global::System.Data.DataColumn columnDocDate;
            
            private global::System.Data.DataColumn columnSourceDocTypeID;
            
            private global::System.Data.DataColumn columnSourceDocID;
            
            private global::System.Data.DataColumn columnSourceDocLine;
            
            private global::System.Data.DataColumn columnTrsUnionID;
            
            private global::System.Data.DataColumn columnDocTypeDesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondPriceStockHistoryDataTable() {
                this.TableName = "THXADiamondPriceStockHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal THXADiamondPriceStockHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected THXADiamondPriceStockHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TrsIDColumn {
                get {
                    return this.columnTrsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TrsTypeIDColumn {
                get {
                    return this.columnTrsTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TrsTypeDescColumn {
                get {
                    return this.columnTrsTypeDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TrsDateColumn {
                get {
                    return this.columnTrsDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReferenceCodeColumn {
                get {
                    return this.columnReferenceCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReferenceSrNoColumn {
                get {
                    return this.columnReferenceSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LotIDColumn {
                get {
                    return this.columnLotID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LotNameColumn {
                get {
                    return this.columnLotName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ParcelOrStoneColumn {
                get {
                    return this.columnParcelOrStone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NaturalOrLabGrownColumn {
                get {
                    return this.columnNaturalOrLabGrown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateIDColumn {
                get {
                    return this.columnCertificateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateLabNameColumn {
                get {
                    return this.columnCertificateLabName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateTypeColumn {
                get {
                    return this.columnCertificateType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateNoColumn {
                get {
                    return this.columnCertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ShapeColumn {
                get {
                    return this.columnShape;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClarityColumn {
                get {
                    return this.columnClarity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OriginalWeightColumn {
                get {
                    return this.columnOriginalWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeightInColumn {
                get {
                    return this.columnWeightIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeightOutColumn {
                get {
                    return this.columnWeightOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeightBalanceColumn {
                get {
                    return this.columnWeightBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeightLossColumn {
                get {
                    return this.columnWeightLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ScrapWeightColumn {
                get {
                    return this.columnScrapWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TrsTotalCostColumn {
                get {
                    return this.columnTrsTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ParcelAvgCostColumn {
                get {
                    return this.columnParcelAvgCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ListCostDiscountColumn {
                get {
                    return this.columnListCostDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ListColumn {
                get {
                    return this.columnList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalListColumn {
                get {
                    return this.columnTotalList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ListSaleDiscountColumn {
                get {
                    return this.columnListSaleDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SaleColumn {
                get {
                    return this.columnSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalSaleColumn {
                get {
                    return this.columnTotalSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GBPSaleColumn {
                get {
                    return this.columnGBPSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GBPTotalSaleColumn {
                get {
                    return this.columnGBPTotalSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OutListColumn {
                get {
                    return this.columnOutList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ListOutDiscountColumn {
                get {
                    return this.columnListOutDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OutPriceColumn {
                get {
                    return this.columnOutPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OutTotalPriceColumn {
                get {
                    return this.columnOutTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GBPOutPriceColumn {
                get {
                    return this.columnGBPOutPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GBPOutTotalPriceColumn {
                get {
                    return this.columnGBPOutTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocationAccountCodeColumn {
                get {
                    return this.columnLocationAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocationAccountNameColumn {
                get {
                    return this.columnLocationAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VendorAccountCodeColumn {
                get {
                    return this.columnVendorAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VendorAccountNameColumn {
                get {
                    return this.columnVendorAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalCostColumn {
                get {
                    return this.columnTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TrsDocIDColumn {
                get {
                    return this.columnTrsDocID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TrsDocLineColumn {
                get {
                    return this.columnTrsDocLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DocTypeIDColumn {
                get {
                    return this.columnDocTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DocIDColumn {
                get {
                    return this.columnDocID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DocLineColumn {
                get {
                    return this.columnDocLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DocDateColumn {
                get {
                    return this.columnDocDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SourceDocTypeIDColumn {
                get {
                    return this.columnSourceDocTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SourceDocIDColumn {
                get {
                    return this.columnSourceDocID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SourceDocLineColumn {
                get {
                    return this.columnSourceDocLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TrsUnionIDColumn {
                get {
                    return this.columnTrsUnionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DocTypeDescColumn {
                get {
                    return this.columnDocTypeDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondPriceStockHistoryRow this[int index] {
                get {
                    return ((THXADiamondPriceStockHistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event THXADiamondPriceStockHistoryRowChangeEventHandler THXADiamondPriceStockHistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event THXADiamondPriceStockHistoryRowChangeEventHandler THXADiamondPriceStockHistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event THXADiamondPriceStockHistoryRowChangeEventHandler THXADiamondPriceStockHistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event THXADiamondPriceStockHistoryRowChangeEventHandler THXADiamondPriceStockHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddTHXADiamondPriceStockHistoryRow(THXADiamondPriceStockHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondPriceStockHistoryRow AddTHXADiamondPriceStockHistoryRow(
                        int TrsTypeID, 
                        string TrsTypeDesc, 
                        System.DateTime TrsDate, 
                        string ReferenceCode, 
                        int ReferenceSrNo, 
                        int LotID, 
                        int ItemID, 
                        string LotName, 
                        string ParcelOrStone, 
                        string NaturalOrLabGrown, 
                        int CertificateID, 
                        string CertificateLabName, 
                        string CertificateType, 
                        string CertificateNo, 
                        string Shape, 
                        string Size, 
                        string Color, 
                        string Clarity, 
                        decimal OriginalWeight, 
                        decimal WeightIn, 
                        decimal WeightOut, 
                        decimal WeightBalance, 
                        decimal WeightLoss, 
                        decimal ScrapWeight, 
                        decimal Cost, 
                        decimal TrsTotalCost, 
                        decimal ParcelAvgCost, 
                        decimal ListCostDiscount, 
                        decimal List, 
                        decimal TotalList, 
                        decimal ListSaleDiscount, 
                        decimal Sale, 
                        decimal TotalSale, 
                        decimal GBPSale, 
                        decimal GBPTotalSale, 
                        decimal OutList, 
                        decimal ListOutDiscount, 
                        decimal OutPrice, 
                        decimal OutTotalPrice, 
                        decimal GBPOutPrice, 
                        decimal GBPOutTotalPrice, 
                        decimal ExchangeRate, 
                        string LocationAccountCode, 
                        string LocationAccountName, 
                        string VendorAccountCode, 
                        string VendorAccountName, 
                        string Remark, 
                        string Created_By, 
                        decimal TotalCost, 
                        int TrsDocID, 
                        int TrsDocLine, 
                        int DocTypeID, 
                        int DocID, 
                        int DocLine, 
                        System.DateTime DocDate, 
                        int SourceDocTypeID, 
                        int SourceDocID, 
                        int SourceDocLine, 
                        int TrsUnionID, 
                        string DocTypeDesc) {
                THXADiamondPriceStockHistoryRow rowTHXADiamondPriceStockHistoryRow = ((THXADiamondPriceStockHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TrsTypeID,
                        TrsTypeDesc,
                        TrsDate,
                        ReferenceCode,
                        ReferenceSrNo,
                        LotID,
                        ItemID,
                        LotName,
                        ParcelOrStone,
                        NaturalOrLabGrown,
                        CertificateID,
                        CertificateLabName,
                        CertificateType,
                        CertificateNo,
                        Shape,
                        Size,
                        Color,
                        Clarity,
                        OriginalWeight,
                        WeightIn,
                        WeightOut,
                        WeightBalance,
                        WeightLoss,
                        ScrapWeight,
                        Cost,
                        TrsTotalCost,
                        ParcelAvgCost,
                        ListCostDiscount,
                        List,
                        TotalList,
                        ListSaleDiscount,
                        Sale,
                        TotalSale,
                        GBPSale,
                        GBPTotalSale,
                        OutList,
                        ListOutDiscount,
                        OutPrice,
                        OutTotalPrice,
                        GBPOutPrice,
                        GBPOutTotalPrice,
                        ExchangeRate,
                        LocationAccountCode,
                        LocationAccountName,
                        VendorAccountCode,
                        VendorAccountName,
                        Remark,
                        Created_By,
                        TotalCost,
                        TrsDocID,
                        TrsDocLine,
                        DocTypeID,
                        DocID,
                        DocLine,
                        DocDate,
                        SourceDocTypeID,
                        SourceDocID,
                        SourceDocLine,
                        TrsUnionID,
                        DocTypeDesc};
                rowTHXADiamondPriceStockHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTHXADiamondPriceStockHistoryRow);
                return rowTHXADiamondPriceStockHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondPriceStockHistoryRow FindByTrsID(int TrsID) {
                return ((THXADiamondPriceStockHistoryRow)(this.Rows.Find(new object[] {
                            TrsID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                THXADiamondPriceStockHistoryDataTable cln = ((THXADiamondPriceStockHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new THXADiamondPriceStockHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnTrsID = base.Columns["TrsID"];
                this.columnTrsTypeID = base.Columns["TrsTypeID"];
                this.columnTrsTypeDesc = base.Columns["TrsTypeDesc"];
                this.columnTrsDate = base.Columns["TrsDate"];
                this.columnReferenceCode = base.Columns["ReferenceCode"];
                this.columnReferenceSrNo = base.Columns["ReferenceSrNo"];
                this.columnLotID = base.Columns["LotID"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnLotName = base.Columns["LotName"];
                this.columnParcelOrStone = base.Columns["ParcelOrStone"];
                this.columnNaturalOrLabGrown = base.Columns["NaturalOrLabGrown"];
                this.columnCertificateID = base.Columns["CertificateID"];
                this.columnCertificateLabName = base.Columns["CertificateLabName"];
                this.columnCertificateType = base.Columns["CertificateType"];
                this.columnCertificateNo = base.Columns["CertificateNo"];
                this.columnShape = base.Columns["Shape"];
                this.columnSize = base.Columns["Size"];
                this.columnColor = base.Columns["Color"];
                this.columnClarity = base.Columns["Clarity"];
                this.columnOriginalWeight = base.Columns["OriginalWeight"];
                this.columnWeightIn = base.Columns["WeightIn"];
                this.columnWeightOut = base.Columns["WeightOut"];
                this.columnWeightBalance = base.Columns["WeightBalance"];
                this.columnWeightLoss = base.Columns["WeightLoss"];
                this.columnScrapWeight = base.Columns["ScrapWeight"];
                this.columnCost = base.Columns["Cost"];
                this.columnTrsTotalCost = base.Columns["TrsTotalCost"];
                this.columnParcelAvgCost = base.Columns["ParcelAvgCost"];
                this.columnListCostDiscount = base.Columns["ListCostDiscount"];
                this.columnList = base.Columns["List"];
                this.columnTotalList = base.Columns["TotalList"];
                this.columnListSaleDiscount = base.Columns["ListSaleDiscount"];
                this.columnSale = base.Columns["Sale"];
                this.columnTotalSale = base.Columns["TotalSale"];
                this.columnGBPSale = base.Columns["GBPSale"];
                this.columnGBPTotalSale = base.Columns["GBPTotalSale"];
                this.columnOutList = base.Columns["OutList"];
                this.columnListOutDiscount = base.Columns["ListOutDiscount"];
                this.columnOutPrice = base.Columns["OutPrice"];
                this.columnOutTotalPrice = base.Columns["OutTotalPrice"];
                this.columnGBPOutPrice = base.Columns["GBPOutPrice"];
                this.columnGBPOutTotalPrice = base.Columns["GBPOutTotalPrice"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnLocationAccountCode = base.Columns["LocationAccountCode"];
                this.columnLocationAccountName = base.Columns["LocationAccountName"];
                this.columnVendorAccountCode = base.Columns["VendorAccountCode"];
                this.columnVendorAccountName = base.Columns["VendorAccountName"];
                this.columnRemark = base.Columns["Remark"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnTotalCost = base.Columns["TotalCost"];
                this.columnTrsDocID = base.Columns["TrsDocID"];
                this.columnTrsDocLine = base.Columns["TrsDocLine"];
                this.columnDocTypeID = base.Columns["DocTypeID"];
                this.columnDocID = base.Columns["DocID"];
                this.columnDocLine = base.Columns["DocLineDto"];
                this.columnDocDate = base.Columns["DocDate"];
                this.columnSourceDocTypeID = base.Columns["SourceDocTypeID"];
                this.columnSourceDocID = base.Columns["SourceDocID"];
                this.columnSourceDocLine = base.Columns["SourceDocLine"];
                this.columnTrsUnionID = base.Columns["TrsUnionID"];
                this.columnDocTypeDesc = base.Columns["DocTypeDesc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnTrsID = new global::System.Data.DataColumn("TrsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsID);
                this.columnTrsTypeID = new global::System.Data.DataColumn("TrsTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsTypeID);
                this.columnTrsTypeDesc = new global::System.Data.DataColumn("TrsTypeDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsTypeDesc);
                this.columnTrsDate = new global::System.Data.DataColumn("TrsDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsDate);
                this.columnReferenceCode = new global::System.Data.DataColumn("ReferenceCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceCode);
                this.columnReferenceSrNo = new global::System.Data.DataColumn("ReferenceSrNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceSrNo);
                this.columnLotID = new global::System.Data.DataColumn("LotID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotID);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnLotName = new global::System.Data.DataColumn("LotName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotName);
                this.columnParcelOrStone = new global::System.Data.DataColumn("ParcelOrStone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelOrStone);
                this.columnNaturalOrLabGrown = new global::System.Data.DataColumn("NaturalOrLabGrown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaturalOrLabGrown);
                this.columnCertificateID = new global::System.Data.DataColumn("CertificateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateID);
                this.columnCertificateLabName = new global::System.Data.DataColumn("CertificateLabName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateLabName);
                this.columnCertificateType = new global::System.Data.DataColumn("CertificateType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateType);
                this.columnCertificateNo = new global::System.Data.DataColumn("CertificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateNo);
                this.columnShape = new global::System.Data.DataColumn("Shape", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShape);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnClarity = new global::System.Data.DataColumn("Clarity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClarity);
                this.columnOriginalWeight = new global::System.Data.DataColumn("OriginalWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalWeight);
                this.columnWeightIn = new global::System.Data.DataColumn("WeightIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightIn);
                this.columnWeightOut = new global::System.Data.DataColumn("WeightOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightOut);
                this.columnWeightBalance = new global::System.Data.DataColumn("WeightBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightBalance);
                this.columnWeightLoss = new global::System.Data.DataColumn("WeightLoss", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeightLoss);
                this.columnScrapWeight = new global::System.Data.DataColumn("ScrapWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScrapWeight);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnTrsTotalCost = new global::System.Data.DataColumn("TrsTotalCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsTotalCost);
                this.columnParcelAvgCost = new global::System.Data.DataColumn("ParcelAvgCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParcelAvgCost);
                this.columnListCostDiscount = new global::System.Data.DataColumn("ListCostDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListCostDiscount);
                this.columnList = new global::System.Data.DataColumn("List", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnList);
                this.columnTotalList = new global::System.Data.DataColumn("TotalList", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalList);
                this.columnListSaleDiscount = new global::System.Data.DataColumn("ListSaleDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListSaleDiscount);
                this.columnSale = new global::System.Data.DataColumn("Sale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale);
                this.columnTotalSale = new global::System.Data.DataColumn("TotalSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSale);
                this.columnGBPSale = new global::System.Data.DataColumn("GBPSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBPSale);
                this.columnGBPTotalSale = new global::System.Data.DataColumn("GBPTotalSale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBPTotalSale);
                this.columnOutList = new global::System.Data.DataColumn("OutList", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutList);
                this.columnListOutDiscount = new global::System.Data.DataColumn("ListOutDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListOutDiscount);
                this.columnOutPrice = new global::System.Data.DataColumn("OutPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutPrice);
                this.columnOutTotalPrice = new global::System.Data.DataColumn("OutTotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutTotalPrice);
                this.columnGBPOutPrice = new global::System.Data.DataColumn("GBPOutPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBPOutPrice);
                this.columnGBPOutTotalPrice = new global::System.Data.DataColumn("GBPOutTotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBPOutTotalPrice);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnLocationAccountCode = new global::System.Data.DataColumn("LocationAccountCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationAccountCode);
                this.columnLocationAccountName = new global::System.Data.DataColumn("LocationAccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationAccountName);
                this.columnVendorAccountCode = new global::System.Data.DataColumn("VendorAccountCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAccountCode);
                this.columnVendorAccountName = new global::System.Data.DataColumn("VendorAccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAccountName);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnTotalCost = new global::System.Data.DataColumn("TotalCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCost);
                this.columnTrsDocID = new global::System.Data.DataColumn("TrsDocID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsDocID);
                this.columnTrsDocLine = new global::System.Data.DataColumn("TrsDocLine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsDocLine);
                this.columnDocTypeID = new global::System.Data.DataColumn("DocTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocTypeID);
                this.columnDocID = new global::System.Data.DataColumn("DocID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocID);
                this.columnDocLine = new global::System.Data.DataColumn("DocLineDto", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocLine);
                this.columnDocDate = new global::System.Data.DataColumn("DocDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocDate);
                this.columnSourceDocTypeID = new global::System.Data.DataColumn("SourceDocTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceDocTypeID);
                this.columnSourceDocID = new global::System.Data.DataColumn("SourceDocID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceDocID);
                this.columnSourceDocLine = new global::System.Data.DataColumn("SourceDocLine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceDocLine);
                this.columnTrsUnionID = new global::System.Data.DataColumn("TrsUnionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsUnionID);
                this.columnDocTypeDesc = new global::System.Data.DataColumn("DocTypeDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocTypeDesc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTrsID}, true));
                this.columnTrsID.AutoIncrement = true;
                this.columnTrsID.AutoIncrementSeed = -1;
                this.columnTrsID.AutoIncrementStep = -1;
                this.columnTrsID.AllowDBNull = false;
                this.columnTrsID.ReadOnly = true;
                this.columnTrsID.Unique = true;
                this.columnTrsTypeID.AllowDBNull = false;
                this.columnTrsTypeDesc.AllowDBNull = false;
                this.columnTrsTypeDesc.MaxLength = 50;
                this.columnReferenceCode.AllowDBNull = false;
                this.columnReferenceCode.MaxLength = 50;
                this.columnReferenceSrNo.AllowDBNull = false;
                this.columnLotID.AllowDBNull = false;
                this.columnItemID.AllowDBNull = false;
                this.columnLotName.AllowDBNull = false;
                this.columnLotName.MaxLength = 50;
                this.columnParcelOrStone.AllowDBNull = false;
                this.columnParcelOrStone.MaxLength = 1;
                this.columnNaturalOrLabGrown.AllowDBNull = false;
                this.columnNaturalOrLabGrown.MaxLength = 1;
                this.columnCertificateID.AllowDBNull = false;
                this.columnCertificateLabName.AllowDBNull = false;
                this.columnCertificateLabName.MaxLength = 20;
                this.columnCertificateType.AllowDBNull = false;
                this.columnCertificateType.MaxLength = 50;
                this.columnCertificateNo.AllowDBNull = false;
                this.columnCertificateNo.MaxLength = 20;
                this.columnShape.AllowDBNull = false;
                this.columnShape.MaxLength = 20;
                this.columnSize.AllowDBNull = false;
                this.columnSize.MaxLength = 20;
                this.columnColor.AllowDBNull = false;
                this.columnColor.MaxLength = 20;
                this.columnClarity.AllowDBNull = false;
                this.columnClarity.MaxLength = 20;
                this.columnOriginalWeight.AllowDBNull = false;
                this.columnWeightIn.AllowDBNull = false;
                this.columnWeightOut.AllowDBNull = false;
                this.columnWeightBalance.AllowDBNull = false;
                this.columnWeightLoss.AllowDBNull = false;
                this.columnScrapWeight.AllowDBNull = false;
                this.columnCost.AllowDBNull = false;
                this.columnTrsTotalCost.AllowDBNull = false;
                this.columnParcelAvgCost.AllowDBNull = false;
                this.columnListCostDiscount.AllowDBNull = false;
                this.columnList.AllowDBNull = false;
                this.columnTotalList.AllowDBNull = false;
                this.columnListSaleDiscount.AllowDBNull = false;
                this.columnSale.AllowDBNull = false;
                this.columnTotalSale.AllowDBNull = false;
                this.columnGBPSale.AllowDBNull = false;
                this.columnGBPTotalSale.AllowDBNull = false;
                this.columnOutList.AllowDBNull = false;
                this.columnListOutDiscount.AllowDBNull = false;
                this.columnOutPrice.AllowDBNull = false;
                this.columnOutTotalPrice.AllowDBNull = false;
                this.columnGBPOutPrice.AllowDBNull = false;
                this.columnGBPOutTotalPrice.AllowDBNull = false;
                this.columnExchangeRate.AllowDBNull = false;
                this.columnLocationAccountCode.AllowDBNull = false;
                this.columnLocationAccountCode.MaxLength = 20;
                this.columnLocationAccountName.AllowDBNull = false;
                this.columnLocationAccountName.MaxLength = 100;
                this.columnVendorAccountCode.AllowDBNull = false;
                this.columnVendorAccountCode.MaxLength = 20;
                this.columnVendorAccountName.AllowDBNull = false;
                this.columnVendorAccountName.MaxLength = 100;
                this.columnRemark.AllowDBNull = false;
                this.columnRemark.MaxLength = 1000;
                this.columnCreated_By.AllowDBNull = false;
                this.columnCreated_By.MaxLength = 30;
                this.columnTotalCost.AllowDBNull = false;
                this.columnDocTypeDesc.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondPriceStockHistoryRow NewTHXADiamondPriceStockHistoryRow() {
                return ((THXADiamondPriceStockHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new THXADiamondPriceStockHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(THXADiamondPriceStockHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THXADiamondPriceStockHistoryRowChanged != null)) {
                    this.THXADiamondPriceStockHistoryRowChanged(this, new THXADiamondPriceStockHistoryRowChangeEvent(((THXADiamondPriceStockHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THXADiamondPriceStockHistoryRowChanging != null)) {
                    this.THXADiamondPriceStockHistoryRowChanging(this, new THXADiamondPriceStockHistoryRowChangeEvent(((THXADiamondPriceStockHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THXADiamondPriceStockHistoryRowDeleted != null)) {
                    this.THXADiamondPriceStockHistoryRowDeleted(this, new THXADiamondPriceStockHistoryRowChangeEvent(((THXADiamondPriceStockHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THXADiamondPriceStockHistoryRowDeleting != null)) {
                    this.THXADiamondPriceStockHistoryRowDeleting(this, new THXADiamondPriceStockHistoryRowChangeEvent(((THXADiamondPriceStockHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveTHXADiamondPriceStockHistoryRow(THXADiamondPriceStockHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DevTHLStoreDataSet ds = new DevTHLStoreDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THXADiamondPriceStockHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class THXADiamondLotRow : global::System.Data.DataRow {
            
            private THXADiamondLotDataTable tableTHXADiamondLot;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal THXADiamondLotRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHXADiamondLot = ((THXADiamondLotDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int LotID {
                get {
                    return ((int)(this[this.tableTHXADiamondLot.LotIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.LotIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LotName {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.LotNameColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.LotNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ItemID {
                get {
                    return ((int)(this[this.tableTHXADiamondLot.ItemIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ItemName {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.ItemNameColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ItemDescription {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.ItemDescriptionColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ItemDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ItemDescription1 {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.ItemDescription1Column]));
                }
                set {
                    this[this.tableTHXADiamondLot.ItemDescription1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ParcelOrStone {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.ParcelOrStoneColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ParcelOrStoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HoldingType {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.HoldingTypeColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.HoldingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Status {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.StatusColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string StockStatus {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.StockStatusColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.StockStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Weight {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.WeightColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Shape {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.ShapeColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ShapeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Size {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.SizeColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Color {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.ColorColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Clarity {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.ClarityColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ClarityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Cut {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.CutColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.CutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Polish {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.PolishColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.PolishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Symmetry {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.SymmetryColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.SymmetryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fluorescence {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.FluorescenceColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.FluorescenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Inscription {
                get {
                    try {
                        return ((string)(this[this.tableTHXADiamondLot.InscriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inscription\' in table \'THXADiamondLot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.InscriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CertificateID {
                get {
                    return ((int)(this[this.tableTHXADiamondLot.CertificateIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.CertificateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CertificateLabName {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.CertificateLabNameColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.CertificateLabNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CertificateType {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.CertificateTypeColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.CertificateTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CertificateNo {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.CertificateNoColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.CertificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CertificateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTHXADiamondLot.CertificateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CertificateDate\' in table \'THXADiamondLot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.CertificateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Cost {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.CostColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TotalCost {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.TotalCostColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.TotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ListCostDiscount {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.ListCostDiscountColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ListCostDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal List {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.ListColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TotalList {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.TotalListColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.TotalListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ListSaleDiscount {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.ListSaleDiscountColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ListSaleDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Sale {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.SaleColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.SaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TotalSale {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.TotalSaleColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.TotalSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GBPSale {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.GBPSaleColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.GBPSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GBPTotalSale {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.GBPTotalSaleColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.GBPTotalSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OutList {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.OutListColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.OutListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ListOutDiscount {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.ListOutDiscountColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ListOutDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OutPrice {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.OutPriceColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.OutPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OutTotalPrice {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.OutTotalPriceColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.OutTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GBPOutPrice {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.GBPOutPriceColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.GBPOutPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GBPOutTotalPrice {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.GBPOutTotalPriceColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.GBPOutTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LocationAccountCode {
                get {
                    try {
                        return ((string)(this[this.tableTHXADiamondLot.LocationAccountCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationAccountCode\' in table \'THXADiamondLot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.LocationAccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LocationAccountName {
                get {
                    try {
                        return ((string)(this[this.tableTHXADiamondLot.LocationAccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationAccountName\' in table \'THXADiamondLot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.LocationAccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VendorAccountCode {
                get {
                    try {
                        return ((string)(this[this.tableTHXADiamondLot.VendorAccountCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorAccountCode\' in table \'THXADiamondLot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.VendorAccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VendorAccountName {
                get {
                    try {
                        return ((string)(this[this.tableTHXADiamondLot.VendorAccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorAccountName\' in table \'THXADiamondLot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.VendorAccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal WeightLoss {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.WeightLossColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.WeightLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ScrapWeight {
                get {
                    return ((decimal)(this[this.tableTHXADiamondLot.ScrapWeightColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ScrapWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableTHXADiamondLot.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'THXADiamondLot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Created_By {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.Created_ByColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DateTime_Created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTHXADiamondLot.DateTime_CreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTime_Created\' in table \'THXADiamondLot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.DateTime_CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Modified_By {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.Modified_ByColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastStockStatusUpdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTHXADiamondLot.LastStockStatusUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastStockStatusUpdate\' in table \'THXADiamondLot\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.LastStockStatusUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ReferenceDocCode {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.ReferenceDocCodeColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.ReferenceDocCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int LastTrsID {
                get {
                    return ((int)(this[this.tableTHXADiamondLot.LastTrsIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.LastTrsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastTrsDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTHXADiamondLot.LastTrsDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTrsDate\' in table \'THXADiamondLot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondLot.LastTrsDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int LastTrsTypeID {
                get {
                    return ((int)(this[this.tableTHXADiamondLot.LastTrsTypeIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.LastTrsTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastTrsTypeDesc {
                get {
                    return ((string)(this[this.tableTHXADiamondLot.LastTrsTypeDescColumn]));
                }
                set {
                    this[this.tableTHXADiamondLot.LastTrsTypeDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInscriptionNull() {
                return this.IsNull(this.tableTHXADiamondLot.InscriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInscriptionNull() {
                this[this.tableTHXADiamondLot.InscriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCertificateDateNull() {
                return this.IsNull(this.tableTHXADiamondLot.CertificateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCertificateDateNull() {
                this[this.tableTHXADiamondLot.CertificateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLocationAccountCodeNull() {
                return this.IsNull(this.tableTHXADiamondLot.LocationAccountCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLocationAccountCodeNull() {
                this[this.tableTHXADiamondLot.LocationAccountCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLocationAccountNameNull() {
                return this.IsNull(this.tableTHXADiamondLot.LocationAccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLocationAccountNameNull() {
                this[this.tableTHXADiamondLot.LocationAccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVendorAccountCodeNull() {
                return this.IsNull(this.tableTHXADiamondLot.VendorAccountCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVendorAccountCodeNull() {
                this[this.tableTHXADiamondLot.VendorAccountCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVendorAccountNameNull() {
                return this.IsNull(this.tableTHXADiamondLot.VendorAccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVendorAccountNameNull() {
                this[this.tableTHXADiamondLot.VendorAccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableTHXADiamondLot.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableTHXADiamondLot.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDateTime_CreatedNull() {
                return this.IsNull(this.tableTHXADiamondLot.DateTime_CreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDateTime_CreatedNull() {
                this[this.tableTHXADiamondLot.DateTime_CreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLastStockStatusUpdateNull() {
                return this.IsNull(this.tableTHXADiamondLot.LastStockStatusUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLastStockStatusUpdateNull() {
                this[this.tableTHXADiamondLot.LastStockStatusUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLastTrsDateNull() {
                return this.IsNull(this.tableTHXADiamondLot.LastTrsDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLastTrsDateNull() {
                this[this.tableTHXADiamondLot.LastTrsDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class THXADiamondPriceStockHistoryRow : global::System.Data.DataRow {
            
            private THXADiamondPriceStockHistoryDataTable tableTHXADiamondPriceStockHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal THXADiamondPriceStockHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHXADiamondPriceStockHistory = ((THXADiamondPriceStockHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TrsID {
                get {
                    return ((int)(this[this.tableTHXADiamondPriceStockHistory.TrsIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TrsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TrsTypeID {
                get {
                    return ((int)(this[this.tableTHXADiamondPriceStockHistory.TrsTypeIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TrsTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TrsTypeDesc {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.TrsTypeDescColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TrsTypeDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime TrsDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTHXADiamondPriceStockHistory.TrsDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrsDate\' in table \'THXADiamondPriceStockHistory\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TrsDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ReferenceCode {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.ReferenceCodeColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ReferenceCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ReferenceSrNo {
                get {
                    return ((int)(this[this.tableTHXADiamondPriceStockHistory.ReferenceSrNoColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ReferenceSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int LotID {
                get {
                    return ((int)(this[this.tableTHXADiamondPriceStockHistory.LotIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.LotIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ItemID {
                get {
                    return ((int)(this[this.tableTHXADiamondPriceStockHistory.ItemIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LotName {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.LotNameColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.LotNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ParcelOrStone {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.ParcelOrStoneColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ParcelOrStoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NaturalOrLabGrown {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.NaturalOrLabGrownColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.NaturalOrLabGrownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CertificateID {
                get {
                    return ((int)(this[this.tableTHXADiamondPriceStockHistory.CertificateIDColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.CertificateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CertificateLabName {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.CertificateLabNameColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.CertificateLabNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CertificateType {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.CertificateTypeColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.CertificateTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CertificateNo {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.CertificateNoColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.CertificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Shape {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.ShapeColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ShapeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Size {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.SizeColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Color {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.ColorColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Clarity {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.ClarityColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ClarityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OriginalWeight {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.OriginalWeightColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.OriginalWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal WeightIn {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.WeightInColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.WeightInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal WeightOut {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.WeightOutColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.WeightOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal WeightBalance {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.WeightBalanceColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.WeightBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal WeightLoss {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.WeightLossColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.WeightLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ScrapWeight {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.ScrapWeightColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ScrapWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Cost {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.CostColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TrsTotalCost {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.TrsTotalCostColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TrsTotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ParcelAvgCost {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.ParcelAvgCostColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ParcelAvgCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ListCostDiscount {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.ListCostDiscountColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ListCostDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal List {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.ListColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TotalList {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.TotalListColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TotalListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ListSaleDiscount {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.ListSaleDiscountColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ListSaleDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Sale {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.SaleColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.SaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TotalSale {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.TotalSaleColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TotalSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GBPSale {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.GBPSaleColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.GBPSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GBPTotalSale {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.GBPTotalSaleColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.GBPTotalSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OutList {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.OutListColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.OutListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ListOutDiscount {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.ListOutDiscountColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ListOutDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OutPrice {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.OutPriceColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.OutPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OutTotalPrice {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.OutTotalPriceColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.OutTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GBPOutPrice {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.GBPOutPriceColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.GBPOutPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GBPOutTotalPrice {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.GBPOutTotalPriceColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.GBPOutTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ExchangeRate {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.ExchangeRateColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LocationAccountCode {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.LocationAccountCodeColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.LocationAccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LocationAccountName {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.LocationAccountNameColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.LocationAccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VendorAccountCode {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.VendorAccountCodeColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.VendorAccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VendorAccountName {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.VendorAccountNameColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.VendorAccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Remark {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.RemarkColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Created_By {
                get {
                    return ((string)(this[this.tableTHXADiamondPriceStockHistory.Created_ByColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TotalCost {
                get {
                    return ((decimal)(this[this.tableTHXADiamondPriceStockHistory.TotalCostColumn]));
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TrsDocID {
                get {
                    try {
                        return ((int)(this[this.tableTHXADiamondPriceStockHistory.TrsDocIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrsDocID\' in table \'THXADiamondPriceStockHistory\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TrsDocIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TrsDocLine {
                get {
                    try {
                        return ((int)(this[this.tableTHXADiamondPriceStockHistory.TrsDocLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrsDocLine\' in table \'THXADiamondPriceStockHistory\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TrsDocLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DocTypeID {
                get {
                    try {
                        return ((int)(this[this.tableTHXADiamondPriceStockHistory.DocTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocTypeID\' in table \'THXADiamondPriceStockHistory\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.DocTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DocID {
                get {
                    try {
                        return ((int)(this[this.tableTHXADiamondPriceStockHistory.DocIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocID\' in table \'THXADiamondPriceStockHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.DocIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DocLine {
                get {
                    try {
                        return ((int)(this[this.tableTHXADiamondPriceStockHistory.DocLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocLineDto\' in table \'THXADiamondPriceStockHistory\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.DocLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DocDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTHXADiamondPriceStockHistory.DocDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocDate\' in table \'THXADiamondPriceStockHistory\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.DocDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SourceDocTypeID {
                get {
                    try {
                        return ((int)(this[this.tableTHXADiamondPriceStockHistory.SourceDocTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceDocTypeID\' in table \'THXADiamondPriceStockHistory\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.SourceDocTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SourceDocID {
                get {
                    try {
                        return ((int)(this[this.tableTHXADiamondPriceStockHistory.SourceDocIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceDocID\' in table \'THXADiamondPriceStockHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.SourceDocIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SourceDocLine {
                get {
                    try {
                        return ((int)(this[this.tableTHXADiamondPriceStockHistory.SourceDocLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceDocLine\' in table \'THXADiamondPriceStockHistory\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.SourceDocLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TrsUnionID {
                get {
                    try {
                        return ((int)(this[this.tableTHXADiamondPriceStockHistory.TrsUnionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrsUnionID\' in table \'THXADiamondPriceStockHistory\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.TrsUnionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DocTypeDesc {
                get {
                    try {
                        return ((string)(this[this.tableTHXADiamondPriceStockHistory.DocTypeDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocTypeDesc\' in table \'THXADiamondPriceStockHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTHXADiamondPriceStockHistory.DocTypeDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTrsDateNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.TrsDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTrsDateNull() {
                this[this.tableTHXADiamondPriceStockHistory.TrsDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTrsDocIDNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.TrsDocIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTrsDocIDNull() {
                this[this.tableTHXADiamondPriceStockHistory.TrsDocIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTrsDocLineNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.TrsDocLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTrsDocLineNull() {
                this[this.tableTHXADiamondPriceStockHistory.TrsDocLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDocTypeIDNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.DocTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDocTypeIDNull() {
                this[this.tableTHXADiamondPriceStockHistory.DocTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDocIDNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.DocIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDocIDNull() {
                this[this.tableTHXADiamondPriceStockHistory.DocIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDocLineNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.DocLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDocLineNull() {
                this[this.tableTHXADiamondPriceStockHistory.DocLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDocDateNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.DocDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDocDateNull() {
                this[this.tableTHXADiamondPriceStockHistory.DocDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSourceDocTypeIDNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.SourceDocTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSourceDocTypeIDNull() {
                this[this.tableTHXADiamondPriceStockHistory.SourceDocTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSourceDocIDNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.SourceDocIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSourceDocIDNull() {
                this[this.tableTHXADiamondPriceStockHistory.SourceDocIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSourceDocLineNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.SourceDocLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSourceDocLineNull() {
                this[this.tableTHXADiamondPriceStockHistory.SourceDocLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTrsUnionIDNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.TrsUnionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTrsUnionIDNull() {
                this[this.tableTHXADiamondPriceStockHistory.TrsUnionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDocTypeDescNull() {
                return this.IsNull(this.tableTHXADiamondPriceStockHistory.DocTypeDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDocTypeDescNull() {
                this[this.tableTHXADiamondPriceStockHistory.DocTypeDescColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class THXADiamondLotRowChangeEvent : global::System.EventArgs {
            
            private THXADiamondLotRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondLotRowChangeEvent(THXADiamondLotRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondLotRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class THXADiamondPriceStockHistoryRowChangeEvent : global::System.EventArgs {
            
            private THXADiamondPriceStockHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondPriceStockHistoryRowChangeEvent(THXADiamondPriceStockHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public THXADiamondPriceStockHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DiamondTransaction.DevTHLStoreDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class THXADiamondLotTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public THXADiamondLotTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "THXADiamondLot";
            tableMapping.ColumnMappings.Add("LotID", "LotID");
            tableMapping.ColumnMappings.Add("LotName", "LotName");
            tableMapping.ColumnMappings.Add("ItemID", "ItemID");
            tableMapping.ColumnMappings.Add("ItemName", "ItemName");
            tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
            tableMapping.ColumnMappings.Add("ItemDescription1", "ItemDescription1");
            tableMapping.ColumnMappings.Add("ParcelOrStone", "ParcelOrStone");
            tableMapping.ColumnMappings.Add("HoldingType", "HoldingType");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("StockStatus", "StockStatus");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("Shape", "Shape");
            tableMapping.ColumnMappings.Add("Size", "Size");
            tableMapping.ColumnMappings.Add("Color", "Color");
            tableMapping.ColumnMappings.Add("Clarity", "Clarity");
            tableMapping.ColumnMappings.Add("Cut", "Cut");
            tableMapping.ColumnMappings.Add("Polish", "Polish");
            tableMapping.ColumnMappings.Add("Symmetry", "Symmetry");
            tableMapping.ColumnMappings.Add("Fluorescence", "Fluorescence");
            tableMapping.ColumnMappings.Add("Inscription", "Inscription");
            tableMapping.ColumnMappings.Add("CertificateID", "CertificateID");
            tableMapping.ColumnMappings.Add("CertificateLabName", "CertificateLabName");
            tableMapping.ColumnMappings.Add("CertificateType", "CertificateType");
            tableMapping.ColumnMappings.Add("CertificateNo", "CertificateNo");
            tableMapping.ColumnMappings.Add("CertificateDate", "CertificateDate");
            tableMapping.ColumnMappings.Add("Cost", "Cost");
            tableMapping.ColumnMappings.Add("TotalCost", "TotalCost");
            tableMapping.ColumnMappings.Add("ListCostDiscount", "ListCostDiscount");
            tableMapping.ColumnMappings.Add("List", "List");
            tableMapping.ColumnMappings.Add("TotalList", "TotalList");
            tableMapping.ColumnMappings.Add("ListSaleDiscount", "ListSaleDiscount");
            tableMapping.ColumnMappings.Add("Sale", "Sale");
            tableMapping.ColumnMappings.Add("TotalSale", "TotalSale");
            tableMapping.ColumnMappings.Add("GBPSale", "GBPSale");
            tableMapping.ColumnMappings.Add("GBPTotalSale", "GBPTotalSale");
            tableMapping.ColumnMappings.Add("OutList", "OutList");
            tableMapping.ColumnMappings.Add("ListOutDiscount", "ListOutDiscount");
            tableMapping.ColumnMappings.Add("OutPrice", "OutPrice");
            tableMapping.ColumnMappings.Add("OutTotalPrice", "OutTotalPrice");
            tableMapping.ColumnMappings.Add("GBPOutPrice", "GBPOutPrice");
            tableMapping.ColumnMappings.Add("GBPOutTotalPrice", "GBPOutTotalPrice");
            tableMapping.ColumnMappings.Add("LocationAccountCode", "LocationAccountCode");
            tableMapping.ColumnMappings.Add("LocationAccountName", "LocationAccountName");
            tableMapping.ColumnMappings.Add("VendorAccountCode", "VendorAccountCode");
            tableMapping.ColumnMappings.Add("VendorAccountName", "VendorAccountName");
            tableMapping.ColumnMappings.Add("WeightLoss", "WeightLoss");
            tableMapping.ColumnMappings.Add("ScrapWeight", "ScrapWeight");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("Created_By", "Created_By");
            tableMapping.ColumnMappings.Add("DateTime_Created", "DateTime_Created");
            tableMapping.ColumnMappings.Add("Modified_By", "Modified_By");
            tableMapping.ColumnMappings.Add("LastStockStatusUpdate", "LastStockStatusUpdate");
            tableMapping.ColumnMappings.Add("ReferenceDocCode", "ReferenceDocCode");
            tableMapping.ColumnMappings.Add("LastTrsID", "LastTrsID");
            tableMapping.ColumnMappings.Add("LastTrsDate", "LastTrsDate");
            tableMapping.ColumnMappings.Add("LastTrsTypeID", "LastTrsTypeID");
            tableMapping.ColumnMappings.Add("LastTrsTypeDesc", "LastTrsTypeDesc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[THXADiamondLot] WHERE (([LotID] = @Original_LotID) AND ([LotNa" +
                "me] = @Original_LotName) AND ([ItemID] = @Original_ItemID) AND ([ItemName] = @Or" +
                "iginal_ItemName) AND ([ItemDescription] = @Original_ItemDescription) AND ([ItemD" +
                "escription1] = @Original_ItemDescription1) AND ([Weight] = @Original_Weight) AND" +
                " ([Shape] = @Original_Shape) AND ([Size] = @Original_Size) AND ([Color] = @Origi" +
                "nal_Color) AND ([Clarity] = @Original_Clarity) AND ([Cut] = @Original_Cut) AND (" +
                "[Polish] = @Original_Polish) AND ([Symmetry] = @Original_Symmetry) AND ([Fluores" +
                "cence] = @Original_Fluorescence) AND ((@IsNull_Inscription = 1 AND [Inscription]" +
                " IS NULL) OR ([Inscription] = @Original_Inscription)) AND ([ParcelOrStone] = @Or" +
                "iginal_ParcelOrStone) AND ([HoldingType] = @Original_HoldingType) AND ([Status] " +
                "= @Original_Status) AND ([StockStatus] = @Original_StockStatus) AND ([Certificat" +
                "eID] = @Original_CertificateID) AND ([CertificateLabName] = @Original_Certificat" +
                "eLabName) AND ([CertificateType] = @Original_CertificateType) AND ([CertificateN" +
                "o] = @Original_CertificateNo) AND ((@IsNull_CertificateDate = 1 AND [Certificate" +
                "Date] IS NULL) OR ([CertificateDate] = @Original_CertificateDate)) AND ([Cost] =" +
                " @Original_Cost) AND ([TotalCost] = @Original_TotalCost) AND ([ListCostDiscount]" +
                " = @Original_ListCostDiscount) AND ([List] = @Original_List) AND ([TotalList] = " +
                "@Original_TotalList) AND ([ListSaleDiscount] = @Original_ListSaleDiscount) AND (" +
                "[Sale] = @Original_Sale) AND ([TotalSale] = @Original_TotalSale) AND ([GBPSale] " +
                "= @Original_GBPSale) AND ([GBPTotalSale] = @Original_GBPTotalSale) AND ([OutList" +
                "] = @Original_OutList) AND ([ListOutDiscount] = @Original_ListOutDiscount) AND (" +
                "[OutPrice] = @Original_OutPrice) AND ([OutTotalPrice] = @Original_OutTotalPrice)" +
                " AND ([GBPOutPrice] = @Original_GBPOutPrice) AND ([GBPOutTotalPrice] = @Original" +
                "_GBPOutTotalPrice) AND ((@IsNull_LocationAccountCode = 1 AND [LocationAccountCod" +
                "e] IS NULL) OR ([LocationAccountCode] = @Original_LocationAccountCode)) AND ((@I" +
                "sNull_LocationAccountName = 1 AND [LocationAccountName] IS NULL) OR ([LocationAc" +
                "countName] = @Original_LocationAccountName)) AND ((@IsNull_VendorAccountCode = 1" +
                " AND [VendorAccountCode] IS NULL) OR ([VendorAccountCode] = @Original_VendorAcco" +
                "untCode)) AND ((@IsNull_VendorAccountName = 1 AND [VendorAccountName] IS NULL) O" +
                "R ([VendorAccountName] = @Original_VendorAccountName)) AND ([WeightLoss] = @Orig" +
                "inal_WeightLoss) AND ([ScrapWeight] = @Original_ScrapWeight) AND ((@IsNull_Remar" +
                "k = 1 AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)) AND ([Created_By] " +
                "= @Original_Created_By) AND ((@IsNull_DateTime_Created = 1 AND [DateTime_Created" +
                "] IS NULL) OR ([DateTime_Created] = @Original_DateTime_Created)) AND ([Modified_" +
                "By] = @Original_Modified_By) AND ((@IsNull_LastStockStatusUpdate = 1 AND [LastSt" +
                "ockStatusUpdate] IS NULL) OR ([LastStockStatusUpdate] = @Original_LastStockStatu" +
                "sUpdate)) AND ([ReferenceDocCode] = @Original_ReferenceDocCode) AND ([LastTrsID]" +
                " = @Original_LastTrsID) AND ((@IsNull_LastTrsDate = 1 AND [LastTrsDate] IS NULL)" +
                " OR ([LastTrsDate] = @Original_LastTrsDate)) AND ([LastTrsTypeID] = @Original_La" +
                "stTrsTypeID) AND ([LastTrsTypeDesc] = @Original_LastTrsTypeDesc))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemDescription1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shape", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clarity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cut", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Polish", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Polish", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Symmetry", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Symmetry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluorescence", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluorescence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inscription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inscription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inscription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inscription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParcelOrStone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParcelOrStone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoldingType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoldingType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateLabName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateLabName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CertificateDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListCostDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListCostDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_List", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "List", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListSaleDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListSaleDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Sale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPTotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPTotalSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListOutDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListOutDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutTotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPOutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPOutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutTotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LocationAccountCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LocationAccountName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorAccountCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorAccountName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightLoss", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightLoss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScrapWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ScrapWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateTime_Created", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTime_Created", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateTime_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTime_Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastStockStatusUpdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastStockStatusUpdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastStockStatusUpdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastStockStatusUpdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReferenceDocCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceDocCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTrsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTrsDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTrsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTrsTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTrsTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsTypeDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[THXADiamondLot] ([LotID], [LotName], [ItemID], [ItemName], [It" +
                "emDescription], [ItemDescription1], [Weight], [Shape], [Size], [Color], [Clarity" +
                "], [Cut], [Polish], [Symmetry], [Fluorescence], [Inscription], [ParcelOrStone], " +
                "[HoldingType], [Status], [StockStatus], [CertificateID], [CertificateLabName], [" +
                "CertificateType], [CertificateNo], [CertificateDate], [Cost], [TotalCost], [List" +
                "CostDiscount], [List], [TotalList], [ListSaleDiscount], [Sale], [TotalSale], [GB" +
                "PSale], [GBPTotalSale], [OutList], [ListOutDiscount], [OutPrice], [OutTotalPrice" +
                "], [GBPOutPrice], [GBPOutTotalPrice], [LocationAccountCode], [LocationAccountNam" +
                "e], [VendorAccountCode], [VendorAccountName], [WeightLoss], [ScrapWeight], [Rema" +
                "rk], [Created_By], [DateTime_Created], [Modified_By], [LastStockStatusUpdate], [" +
                "ReferenceDocCode], [LastTrsID], [LastTrsDate], [LastTrsTypeID], [LastTrsTypeDesc" +
                "]) VALUES (@LotID, @LotName, @ItemID, @ItemName, @ItemDescription, @ItemDescript" +
                "ion1, @Weight, @Shape, @Size, @Color, @Clarity, @Cut, @Polish, @Symmetry, @Fluor" +
                "escence, @Inscription, @ParcelOrStone, @HoldingType, @Status, @StockStatus, @Cer" +
                "tificateID, @CertificateLabName, @CertificateType, @CertificateNo, @CertificateD" +
                "ate, @Cost, @TotalCost, @ListCostDiscount, @List, @TotalList, @ListSaleDiscount," +
                " @Sale, @TotalSale, @GBPSale, @GBPTotalSale, @OutList, @ListOutDiscount, @OutPri" +
                "ce, @OutTotalPrice, @GBPOutPrice, @GBPOutTotalPrice, @LocationAccountCode, @Loca" +
                "tionAccountName, @VendorAccountCode, @VendorAccountName, @WeightLoss, @ScrapWeig" +
                "ht, @Remark, @Created_By, @DateTime_Created, @Modified_By, @LastStockStatusUpdat" +
                "e, @ReferenceDocCode, @LastTrsID, @LastTrsDate, @LastTrsTypeID, @LastTrsTypeDesc" +
                ");\r\nSELECT LotID, LotName, ItemID, ItemName, ItemDescription, ItemDescription1, " +
                "Weight, Shape, Size, Color, Clarity, Cut, Polish, Symmetry, Fluorescence, Inscri" +
                "ption, ParcelOrStone, HoldingType, Status, StockStatus, CertificateID, Certifica" +
                "teLabName, CertificateType, CertificateNo, CertificateDate, Cost, TotalCost, Lis" +
                "tCostDiscount, List, TotalList, ListSaleDiscount, Sale, TotalSale, GBPSale, GBPT" +
                "otalSale, OutList, ListOutDiscount, OutPrice, OutTotalPrice, GBPOutPrice, GBPOut" +
                "TotalPrice, LocationAccountCode, LocationAccountName, VendorAccountCode, VendorA" +
                "ccountName, WeightLoss, ScrapWeight, Remark, Created_By, DateTime_Created, Modif" +
                "ied_By, LastStockStatusUpdate, ReferenceDocCode, LastTrsID, LastTrsDate, LastTrs" +
                "TypeID, LastTrsTypeDesc FROM THXADiamondLot WHERE (LotID = @LotID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDescription1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shape", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clarity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cut", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Polish", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Polish", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Symmetry", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Symmetry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluorescence", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluorescence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inscription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inscription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParcelOrStone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParcelOrStone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoldingType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoldingType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateLabName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateLabName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListCostDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListCostDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "List", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListSaleDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListSaleDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Sale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPTotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPTotalSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListOutDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListOutDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutTotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPOutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPOutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutTotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightLoss", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightLoss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ScrapWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateTime_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTime_Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastStockStatusUpdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastStockStatusUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenceDocCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceDocCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTrsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTrsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTrsTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTrsTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[THXADiamondLot] SET [LotID] = @LotID, [LotName] = @LotName, [ItemID" +
                "] = @ItemID, [ItemName] = @ItemName, [ItemDescription] = @ItemDescription, [Item" +
                "Description1] = @ItemDescription1, [Weight] = @Weight, [Shape] = @Shape, [Size] " +
                "= @Size, [Color] = @Color, [Clarity] = @Clarity, [Cut] = @Cut, [Polish] = @Polis" +
                "h, [Symmetry] = @Symmetry, [Fluorescence] = @Fluorescence, [Inscription] = @Insc" +
                "ription, [ParcelOrStone] = @ParcelOrStone, [HoldingType] = @HoldingType, [Status" +
                "] = @Status, [StockStatus] = @StockStatus, [CertificateID] = @CertificateID, [Ce" +
                "rtificateLabName] = @CertificateLabName, [CertificateType] = @CertificateType, [" +
                "CertificateNo] = @CertificateNo, [CertificateDate] = @CertificateDate, [Cost] = " +
                "@Cost, [TotalCost] = @TotalCost, [ListCostDiscount] = @ListCostDiscount, [List] " +
                "= @List, [TotalList] = @TotalList, [ListSaleDiscount] = @ListSaleDiscount, [Sale" +
                "] = @Sale, [TotalSale] = @TotalSale, [GBPSale] = @GBPSale, [GBPTotalSale] = @GBP" +
                "TotalSale, [OutList] = @OutList, [ListOutDiscount] = @ListOutDiscount, [OutPrice" +
                "] = @OutPrice, [OutTotalPrice] = @OutTotalPrice, [GBPOutPrice] = @GBPOutPrice, [" +
                "GBPOutTotalPrice] = @GBPOutTotalPrice, [LocationAccountCode] = @LocationAccountC" +
                "ode, [LocationAccountName] = @LocationAccountName, [VendorAccountCode] = @Vendor" +
                "AccountCode, [VendorAccountName] = @VendorAccountName, [WeightLoss] = @WeightLos" +
                "s, [ScrapWeight] = @ScrapWeight, [Remark] = @Remark, [Created_By] = @Created_By," +
                " [DateTime_Created] = @DateTime_Created, [Modified_By] = @Modified_By, [LastStoc" +
                "kStatusUpdate] = @LastStockStatusUpdate, [ReferenceDocCode] = @ReferenceDocCode," +
                " [LastTrsID] = @LastTrsID, [LastTrsDate] = @LastTrsDate, [LastTrsTypeID] = @Last" +
                "TrsTypeID, [LastTrsTypeDesc] = @LastTrsTypeDesc WHERE (([LotID] = @Original_LotI" +
                "D) AND ([LotName] = @Original_LotName) AND ([ItemID] = @Original_ItemID) AND ([I" +
                "temName] = @Original_ItemName) AND ([ItemDescription] = @Original_ItemDescriptio" +
                "n) AND ([ItemDescription1] = @Original_ItemDescription1) AND ([Weight] = @Origin" +
                "al_Weight) AND ([Shape] = @Original_Shape) AND ([Size] = @Original_Size) AND ([C" +
                "olor] = @Original_Color) AND ([Clarity] = @Original_Clarity) AND ([Cut] = @Origi" +
                "nal_Cut) AND ([Polish] = @Original_Polish) AND ([Symmetry] = @Original_Symmetry)" +
                " AND ([Fluorescence] = @Original_Fluorescence) AND ((@IsNull_Inscription = 1 AND" +
                " [Inscription] IS NULL) OR ([Inscription] = @Original_Inscription)) AND ([Parcel" +
                "OrStone] = @Original_ParcelOrStone) AND ([HoldingType] = @Original_HoldingType) " +
                "AND ([Status] = @Original_Status) AND ([StockStatus] = @Original_StockStatus) AN" +
                "D ([CertificateID] = @Original_CertificateID) AND ([CertificateLabName] = @Origi" +
                "nal_CertificateLabName) AND ([CertificateType] = @Original_CertificateType) AND " +
                "([CertificateNo] = @Original_CertificateNo) AND ((@IsNull_CertificateDate = 1 AN" +
                "D [CertificateDate] IS NULL) OR ([CertificateDate] = @Original_CertificateDate))" +
                " AND ([Cost] = @Original_Cost) AND ([TotalCost] = @Original_TotalCost) AND ([Lis" +
                "tCostDiscount] = @Original_ListCostDiscount) AND ([List] = @Original_List) AND (" +
                "[TotalList] = @Original_TotalList) AND ([ListSaleDiscount] = @Original_ListSaleD" +
                "iscount) AND ([Sale] = @Original_Sale) AND ([TotalSale] = @Original_TotalSale) A" +
                "ND ([GBPSale] = @Original_GBPSale) AND ([GBPTotalSale] = @Original_GBPTotalSale)" +
                " AND ([OutList] = @Original_OutList) AND ([ListOutDiscount] = @Original_ListOutD" +
                "iscount) AND ([OutPrice] = @Original_OutPrice) AND ([OutTotalPrice] = @Original_" +
                "OutTotalPrice) AND ([GBPOutPrice] = @Original_GBPOutPrice) AND ([GBPOutTotalPric" +
                "e] = @Original_GBPOutTotalPrice) AND ((@IsNull_LocationAccountCode = 1 AND [Loca" +
                "tionAccountCode] IS NULL) OR ([LocationAccountCode] = @Original_LocationAccountC" +
                "ode)) AND ((@IsNull_LocationAccountName = 1 AND [LocationAccountName] IS NULL) O" +
                "R ([LocationAccountName] = @Original_LocationAccountName)) AND ((@IsNull_VendorA" +
                "ccountCode = 1 AND [VendorAccountCode] IS NULL) OR ([VendorAccountCode] = @Origi" +
                "nal_VendorAccountCode)) AND ((@IsNull_VendorAccountName = 1 AND [VendorAccountNa" +
                "me] IS NULL) OR ([VendorAccountName] = @Original_VendorAccountName)) AND ([Weigh" +
                "tLoss] = @Original_WeightLoss) AND ([ScrapWeight] = @Original_ScrapWeight) AND (" +
                "(@IsNull_Remark = 1 AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)) AND " +
                "([Created_By] = @Original_Created_By) AND ((@IsNull_DateTime_Created = 1 AND [Da" +
                "teTime_Created] IS NULL) OR ([DateTime_Created] = @Original_DateTime_Created)) A" +
                "ND ([Modified_By] = @Original_Modified_By) AND ((@IsNull_LastStockStatusUpdate =" +
                " 1 AND [LastStockStatusUpdate] IS NULL) OR ([LastStockStatusUpdate] = @Original_" +
                "LastStockStatusUpdate)) AND ([ReferenceDocCode] = @Original_ReferenceDocCode) AN" +
                "D ([LastTrsID] = @Original_LastTrsID) AND ((@IsNull_LastTrsDate = 1 AND [LastTrs" +
                "Date] IS NULL) OR ([LastTrsDate] = @Original_LastTrsDate)) AND ([LastTrsTypeID] " +
                "= @Original_LastTrsTypeID) AND ([LastTrsTypeDesc] = @Original_LastTrsTypeDesc));" +
                "\r\nSELECT LotID, LotName, ItemID, ItemName, ItemDescription, ItemDescription1, We" +
                "ight, Shape, Size, Color, Clarity, Cut, Polish, Symmetry, Fluorescence, Inscript" +
                "ion, ParcelOrStone, HoldingType, Status, StockStatus, CertificateID, Certificate" +
                "LabName, CertificateType, CertificateNo, CertificateDate, Cost, TotalCost, ListC" +
                "ostDiscount, List, TotalList, ListSaleDiscount, Sale, TotalSale, GBPSale, GBPTot" +
                "alSale, OutList, ListOutDiscount, OutPrice, OutTotalPrice, GBPOutPrice, GBPOutTo" +
                "talPrice, LocationAccountCode, LocationAccountName, VendorAccountCode, VendorAcc" +
                "ountName, WeightLoss, ScrapWeight, Remark, Created_By, DateTime_Created, Modifie" +
                "d_By, LastStockStatusUpdate, ReferenceDocCode, LastTrsID, LastTrsDate, LastTrsTy" +
                "peID, LastTrsTypeDesc FROM THXADiamondLot WHERE (LotID = @LotID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDescription1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shape", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clarity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cut", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Polish", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Polish", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Symmetry", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Symmetry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluorescence", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluorescence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inscription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inscription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParcelOrStone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParcelOrStone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoldingType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoldingType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateLabName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateLabName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListCostDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListCostDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "List", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListSaleDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListSaleDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Sale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPTotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPTotalSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListOutDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListOutDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutTotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPOutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPOutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutTotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightLoss", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightLoss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ScrapWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateTime_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTime_Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastStockStatusUpdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastStockStatusUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenceDocCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceDocCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTrsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTrsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTrsTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastTrsTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemDescription1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shape", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clarity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cut", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Polish", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Polish", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Symmetry", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Symmetry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluorescence", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluorescence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inscription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inscription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inscription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inscription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParcelOrStone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParcelOrStone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoldingType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoldingType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateLabName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateLabName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CertificateDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListCostDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListCostDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_List", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "List", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListSaleDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListSaleDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Sale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPTotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPTotalSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListOutDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListOutDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutTotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPOutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPOutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutTotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LocationAccountCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LocationAccountName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorAccountCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorAccountName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightLoss", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightLoss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScrapWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ScrapWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateTime_Created", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTime_Created", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateTime_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTime_Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastStockStatusUpdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastStockStatusUpdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastStockStatusUpdate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastStockStatusUpdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReferenceDocCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceDocCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTrsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastTrsDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTrsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTrsTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastTrsTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastTrsTypeDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=THLDB1SER\\THLSTORE;Initial Catalog=DevTHLStore;User ID=devthlsqlluser" +
                ";Password=D34vth5ql;Encrypt=False";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT LotID, LotName, ItemID, ItemName, ItemDescription, ItemDescription1, Weight, Shape, Size, Color, Clarity, Cut, Polish, Symmetry, Fluorescence, Inscription, ParcelOrStone, HoldingType, Status, StockStatus, CertificateID, CertificateLabName, CertificateType, CertificateNo, CertificateDate, Cost, TotalCost, ListCostDiscount, List, TotalList, ListSaleDiscount, Sale, TotalSale, GBPSale, GBPTotalSale, OutList, ListOutDiscount, OutPrice, OutTotalPrice, GBPOutPrice, GBPOutTotalPrice, LocationAccountCode, LocationAccountName, VendorAccountCode, VendorAccountName, WeightLoss, ScrapWeight, Remark, Created_By, DateTime_Created, Modified_By, LastStockStatusUpdate, ReferenceDocCode, LastTrsID, LastTrsDate, LastTrsTypeID, LastTrsTypeDesc FROM dbo.THXADiamondLot";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT CertificateDate, CertificateID, CertificateLabName, CertificateNo, CertificateType, Clarity, Color, Cost, Created_By, Cut, DateTime_Created, Fluorescence, GBPOutPrice, GBPOutTotalPrice, GBPSale, GBPTotalSale, HoldingType, Inscription, ItemDescription, ItemDescription1, ItemID, ItemName, LastStockStatusUpdate, LastTrsDate, LastTrsID, LastTrsTypeDesc, LastTrsTypeID, List, ListCostDiscount, ListOutDiscount, ListSaleDiscount, LocationAccountCode, LocationAccountName, LotID, LotName, Modified_By, OutList, OutPrice, OutTotalPrice, ParcelOrStone, Polish, ReferenceDocCode, Remark, Sale, ScrapWeight, Shape, Size, Status, StockStatus, Symmetry, TotalCost, TotalList, TotalSale, VendorAccountCode, VendorAccountName, Weight, WeightLoss FROM THXADiamondLot";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT CertificateDate, CertificateID, CertificateLabName, CertificateNo, CertificateType, Clarity, Color, Cost, Created_By, Cut, Fluorescence, GBPOutPrice, GBPOutTotalPrice, GBPSale, GBPTotalSale, HoldingType, Inscription, ItemDescription, ItemDescription1, ItemID, ItemName, LastStockStatusUpdate, LastTrsDate, LastTrsID, LastTrsTypeDesc, LastTrsTypeID, List, ListCostDiscount, ListOutDiscount, ListSaleDiscount, LocationAccountCode, LocationAccountName, LotID, LotName, Modified_By, OutList, OutPrice, OutTotalPrice, ParcelOrStone, Polish, ReferenceDocCode, Remark, Sale, ScrapWeight, Shape, Size, Status, StockStatus, Symmetry, TotalCost, TotalList, TotalSale, VendorAccountCode, VendorAccountName, Weight, WeightLoss FROM THXADiamondLot WHERE (ParcelOrStone = 'P') AND (LotID = @LotID) ORDER BY ItemName";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT CertificateDate, CertificateID, CertificateLabName, CertificateNo, CertificateType, Clarity, Color, Cost, Created_By, Cut, DateTime_Created, Fluorescence, GBPOutPrice, GBPOutTotalPrice, GBPSale, GBPTotalSale, HoldingType, Inscription, ItemDescription, ItemDescription1, ItemID, ItemName, LastStockStatusUpdate, LastTrsDate, LastTrsID, LastTrsTypeDesc, LastTrsTypeID, List, ListCostDiscount, ListOutDiscount, ListSaleDiscount, LocationAccountCode, LocationAccountName, LotID, LotName, Modified_By, OutList, OutPrice, OutTotalPrice, ParcelOrStone, Polish, ReferenceDocCode, Remark, Sale, ScrapWeight, Shape, Size, Status, StockStatus, Symmetry, TotalCost, TotalList, TotalSale, VendorAccountCode, VendorAccountName, Weight, WeightLoss FROM THXADiamondLot WHERE (@LotID IS NULL OR LotID = @LotID) AND (@LotName IS NULL OR LotName = @LotName) AND (@HoldingType IS NULL OR HoldingType = @HoldingType) AND (@Status IS NULL OR Status = @Status) AND (@LocationAccountName IS NULL OR LocationAccountName = @LocationAccountName) AND (@Shape IS NULL OR Shape = @Shape) AND (@Size IS NULL OR Size = @Size) AND (@Color IS NULL OR Color = @Color) AND (@Clarity IS NULL OR Clarity = @Clarity)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotName", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LotName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoldingType", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "HoldingType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationAccountName", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shape", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Shape", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clarity", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Clarity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DevTHLStoreDataSet.THXADiamondLotDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DevTHLStoreDataSet.THXADiamondLotDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DevTHLStoreDataSet.THXADiamondLotDataTable dataTable = new DevTHLStoreDataSet.THXADiamondLotDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Fill1(DevTHLStoreDataSet.THXADiamondLotDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DevTHLStoreDataSet.THXADiamondLotDataTable GetDataBy1() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            DevTHLStoreDataSet.THXADiamondLotDataTable dataTable = new DevTHLStoreDataSet.THXADiamondLotDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFilters(DevTHLStoreDataSet.THXADiamondLotDataTable dataTable, int LotID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LotID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DevTHLStoreDataSet.THXADiamondLotDataTable GetDataBy(int LotID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LotID));
            DevTHLStoreDataSet.THXADiamondLotDataTable dataTable = new DevTHLStoreDataSet.THXADiamondLotDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLot(DevTHLStoreDataSet.THXADiamondLotDataTable dataTable, int LotID, string LotName, string HoldingType, string Status, string LocationAccountName, string Shape, string Size, string Color, string Clarity) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LotID));
            if ((LotName == null)) {
                throw new global::System.ArgumentNullException("LotName");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LotName));
            }
            if ((HoldingType == null)) {
                throw new global::System.ArgumentNullException("HoldingType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(HoldingType));
            }
            if ((Status == null)) {
                throw new global::System.ArgumentNullException("Status");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(Status));
            }
            if ((LocationAccountName == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(LocationAccountName));
            }
            if ((Shape == null)) {
                throw new global::System.ArgumentNullException("Shape");
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(Shape));
            }
            if ((Size == null)) {
                throw new global::System.ArgumentNullException("Size");
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(Size));
            }
            if ((Color == null)) {
                throw new global::System.ArgumentNullException("Color");
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(Color));
            }
            if ((Clarity == null)) {
                throw new global::System.ArgumentNullException("Clarity");
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(Clarity));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DevTHLStoreDataSet.THXADiamondLotDataTable GetDataByLot(int LotID, string LotName, string HoldingType, string Status, string LocationAccountName, string Shape, string Size, string Color, string Clarity) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(LotID));
            if ((LotName == null)) {
                throw new global::System.ArgumentNullException("LotName");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LotName));
            }
            if ((HoldingType == null)) {
                throw new global::System.ArgumentNullException("HoldingType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(HoldingType));
            }
            if ((Status == null)) {
                throw new global::System.ArgumentNullException("Status");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(Status));
            }
            if ((LocationAccountName == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(LocationAccountName));
            }
            if ((Shape == null)) {
                throw new global::System.ArgumentNullException("Shape");
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(Shape));
            }
            if ((Size == null)) {
                throw new global::System.ArgumentNullException("Size");
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(Size));
            }
            if ((Color == null)) {
                throw new global::System.ArgumentNullException("Color");
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(Color));
            }
            if ((Clarity == null)) {
                throw new global::System.ArgumentNullException("Clarity");
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(Clarity));
            }
            DevTHLStoreDataSet.THXADiamondLotDataTable dataTable = new DevTHLStoreDataSet.THXADiamondLotDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DevTHLStoreDataSet.THXADiamondLotDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DevTHLStoreDataSet dataSet) {
            return this.Adapter.Update(dataSet, "THXADiamondLot");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_LotID, 
                    string Original_LotName, 
                    int Original_ItemID, 
                    string Original_ItemName, 
                    string Original_ItemDescription, 
                    string Original_ItemDescription1, 
                    decimal Original_Weight, 
                    string Original_Shape, 
                    string Original_Size, 
                    string Original_Color, 
                    string Original_Clarity, 
                    string Original_Cut, 
                    string Original_Polish, 
                    string Original_Symmetry, 
                    string Original_Fluorescence, 
                    string Original_Inscription, 
                    string Original_ParcelOrStone, 
                    string Original_HoldingType, 
                    string Original_Status, 
                    string Original_StockStatus, 
                    int Original_CertificateID, 
                    string Original_CertificateLabName, 
                    string Original_CertificateType, 
                    string Original_CertificateNo, 
                    global::System.Nullable<global::System.DateTime> Original_CertificateDate, 
                    decimal Original_Cost, 
                    decimal Original_TotalCost, 
                    decimal Original_ListCostDiscount, 
                    decimal Original_List, 
                    decimal Original_TotalList, 
                    decimal Original_ListSaleDiscount, 
                    decimal Original_Sale, 
                    decimal Original_TotalSale, 
                    decimal Original_GBPSale, 
                    decimal Original_GBPTotalSale, 
                    decimal Original_OutList, 
                    decimal Original_ListOutDiscount, 
                    decimal Original_OutPrice, 
                    decimal Original_OutTotalPrice, 
                    decimal Original_GBPOutPrice, 
                    decimal Original_GBPOutTotalPrice, 
                    string Original_LocationAccountCode, 
                    string Original_LocationAccountName, 
                    string Original_VendorAccountCode, 
                    string Original_VendorAccountName, 
                    decimal Original_WeightLoss, 
                    decimal Original_ScrapWeight, 
                    string Original_Remark, 
                    string Original_Created_By, 
                    global::System.Nullable<global::System.DateTime> Original_DateTime_Created, 
                    string Original_Modified_By, 
                    global::System.Nullable<global::System.DateTime> Original_LastStockStatusUpdate, 
                    string Original_ReferenceDocCode, 
                    int Original_LastTrsID, 
                    global::System.Nullable<global::System.DateTime> Original_LastTrsDate, 
                    int Original_LastTrsTypeID, 
                    string Original_LastTrsTypeDesc) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_LotID));
            if ((Original_LotName == null)) {
                throw new global::System.ArgumentNullException("Original_LotName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_LotName));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ItemID));
            if ((Original_ItemName == null)) {
                throw new global::System.ArgumentNullException("Original_ItemName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ItemName));
            }
            if ((Original_ItemDescription == null)) {
                throw new global::System.ArgumentNullException("Original_ItemDescription");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ItemDescription));
            }
            if ((Original_ItemDescription1 == null)) {
                throw new global::System.ArgumentNullException("Original_ItemDescription1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ItemDescription1));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Weight));
            if ((Original_Shape == null)) {
                throw new global::System.ArgumentNullException("Original_Shape");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Shape));
            }
            if ((Original_Size == null)) {
                throw new global::System.ArgumentNullException("Original_Size");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Size));
            }
            if ((Original_Color == null)) {
                throw new global::System.ArgumentNullException("Original_Color");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Color));
            }
            if ((Original_Clarity == null)) {
                throw new global::System.ArgumentNullException("Original_Clarity");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Clarity));
            }
            if ((Original_Cut == null)) {
                throw new global::System.ArgumentNullException("Original_Cut");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Cut));
            }
            if ((Original_Polish == null)) {
                throw new global::System.ArgumentNullException("Original_Polish");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Polish));
            }
            if ((Original_Symmetry == null)) {
                throw new global::System.ArgumentNullException("Original_Symmetry");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Symmetry));
            }
            if ((Original_Fluorescence == null)) {
                throw new global::System.ArgumentNullException("Original_Fluorescence");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Fluorescence));
            }
            if ((Original_Inscription == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Inscription));
            }
            if ((Original_ParcelOrStone == null)) {
                throw new global::System.ArgumentNullException("Original_ParcelOrStone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ParcelOrStone));
            }
            if ((Original_HoldingType == null)) {
                throw new global::System.ArgumentNullException("Original_HoldingType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_HoldingType));
            }
            if ((Original_Status == null)) {
                throw new global::System.ArgumentNullException("Original_Status");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Status));
            }
            if ((Original_StockStatus == null)) {
                throw new global::System.ArgumentNullException("Original_StockStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_StockStatus));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_CertificateID));
            if ((Original_CertificateLabName == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateLabName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CertificateLabName));
            }
            if ((Original_CertificateType == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_CertificateType));
            }
            if ((Original_CertificateNo == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_CertificateNo));
            }
            if ((Original_CertificateDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_CertificateDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_Cost));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_TotalCost));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_ListCostDiscount));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_List));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_TotalList));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_ListSaleDiscount));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((decimal)(Original_Sale));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_TotalSale));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((decimal)(Original_GBPSale));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_GBPTotalSale));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_OutList));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_ListOutDiscount));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((decimal)(Original_OutPrice));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_OutTotalPrice));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_GBPOutPrice));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_GBPOutTotalPrice));
            if ((Original_LocationAccountCode == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_LocationAccountCode));
            }
            if ((Original_LocationAccountName == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_LocationAccountName));
            }
            if ((Original_VendorAccountCode == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_VendorAccountCode));
            }
            if ((Original_VendorAccountName == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_VendorAccountName));
            }
            this.Adapter.DeleteCommand.Parameters[51].Value = ((decimal)(Original_WeightLoss));
            this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_ScrapWeight));
            if ((Original_Remark == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_Remark));
            }
            if ((Original_Created_By == null)) {
                throw new global::System.ArgumentNullException("Original_Created_By");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_Created_By));
            }
            if ((Original_DateTime_Created.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((System.DateTime)(Original_DateTime_Created.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_By == null)) {
                throw new global::System.ArgumentNullException("Original_Modified_By");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_Modified_By));
            }
            if ((Original_LastStockStatusUpdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((System.DateTime)(Original_LastStockStatusUpdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_ReferenceDocCode == null)) {
                throw new global::System.ArgumentNullException("Original_ReferenceDocCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_ReferenceDocCode));
            }
            this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_LastTrsID));
            if ((Original_LastTrsDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((System.DateTime)(Original_LastTrsDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[65].Value = ((int)(Original_LastTrsTypeID));
            if ((Original_LastTrsTypeDesc == null)) {
                throw new global::System.ArgumentNullException("Original_LastTrsTypeDesc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_LastTrsTypeDesc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int LotID, 
                    string LotName, 
                    int ItemID, 
                    string ItemName, 
                    string ItemDescription, 
                    string ItemDescription1, 
                    decimal Weight, 
                    string Shape, 
                    string Size, 
                    string Color, 
                    string Clarity, 
                    string Cut, 
                    string Polish, 
                    string Symmetry, 
                    string Fluorescence, 
                    string Inscription, 
                    string ParcelOrStone, 
                    string HoldingType, 
                    string Status, 
                    string StockStatus, 
                    int CertificateID, 
                    string CertificateLabName, 
                    string CertificateType, 
                    string CertificateNo, 
                    global::System.Nullable<global::System.DateTime> CertificateDate, 
                    decimal Cost, 
                    decimal TotalCost, 
                    decimal ListCostDiscount, 
                    decimal List, 
                    decimal TotalList, 
                    decimal ListSaleDiscount, 
                    decimal Sale, 
                    decimal TotalSale, 
                    decimal GBPSale, 
                    decimal GBPTotalSale, 
                    decimal OutList, 
                    decimal ListOutDiscount, 
                    decimal OutPrice, 
                    decimal OutTotalPrice, 
                    decimal GBPOutPrice, 
                    decimal GBPOutTotalPrice, 
                    string LocationAccountCode, 
                    string LocationAccountName, 
                    string VendorAccountCode, 
                    string VendorAccountName, 
                    decimal WeightLoss, 
                    decimal ScrapWeight, 
                    string Remark, 
                    string Created_By, 
                    global::System.Nullable<global::System.DateTime> DateTime_Created, 
                    string Modified_By, 
                    global::System.Nullable<global::System.DateTime> LastStockStatusUpdate, 
                    string ReferenceDocCode, 
                    int LastTrsID, 
                    global::System.Nullable<global::System.DateTime> LastTrsDate, 
                    int LastTrsTypeID, 
                    string LastTrsTypeDesc) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(LotID));
            if ((LotName == null)) {
                throw new global::System.ArgumentNullException("LotName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LotName));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ItemID));
            if ((ItemName == null)) {
                throw new global::System.ArgumentNullException("ItemName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ItemName));
            }
            if ((ItemDescription == null)) {
                throw new global::System.ArgumentNullException("ItemDescription");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ItemDescription));
            }
            if ((ItemDescription1 == null)) {
                throw new global::System.ArgumentNullException("ItemDescription1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ItemDescription1));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Weight));
            if ((Shape == null)) {
                throw new global::System.ArgumentNullException("Shape");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Shape));
            }
            if ((Size == null)) {
                throw new global::System.ArgumentNullException("Size");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Size));
            }
            if ((Color == null)) {
                throw new global::System.ArgumentNullException("Color");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Color));
            }
            if ((Clarity == null)) {
                throw new global::System.ArgumentNullException("Clarity");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Clarity));
            }
            if ((Cut == null)) {
                throw new global::System.ArgumentNullException("Cut");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Cut));
            }
            if ((Polish == null)) {
                throw new global::System.ArgumentNullException("Polish");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Polish));
            }
            if ((Symmetry == null)) {
                throw new global::System.ArgumentNullException("Symmetry");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Symmetry));
            }
            if ((Fluorescence == null)) {
                throw new global::System.ArgumentNullException("Fluorescence");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Fluorescence));
            }
            if ((Inscription == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Inscription));
            }
            if ((ParcelOrStone == null)) {
                throw new global::System.ArgumentNullException("ParcelOrStone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ParcelOrStone));
            }
            if ((HoldingType == null)) {
                throw new global::System.ArgumentNullException("HoldingType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(HoldingType));
            }
            if ((Status == null)) {
                throw new global::System.ArgumentNullException("Status");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Status));
            }
            if ((StockStatus == null)) {
                throw new global::System.ArgumentNullException("StockStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(StockStatus));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(CertificateID));
            if ((CertificateLabName == null)) {
                throw new global::System.ArgumentNullException("CertificateLabName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(CertificateLabName));
            }
            if ((CertificateType == null)) {
                throw new global::System.ArgumentNullException("CertificateType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CertificateType));
            }
            if ((CertificateNo == null)) {
                throw new global::System.ArgumentNullException("CertificateNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(CertificateNo));
            }
            if ((CertificateDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(CertificateDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(Cost));
            this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(TotalCost));
            this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(ListCostDiscount));
            this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(List));
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(TotalList));
            this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(ListSaleDiscount));
            this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(Sale));
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(TotalSale));
            this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(GBPSale));
            this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(GBPTotalSale));
            this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(OutList));
            this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(ListOutDiscount));
            this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(OutPrice));
            this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(OutTotalPrice));
            this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(GBPOutPrice));
            this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(GBPOutTotalPrice));
            if ((LocationAccountCode == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(LocationAccountCode));
            }
            if ((LocationAccountName == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(LocationAccountName));
            }
            if ((VendorAccountCode == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(VendorAccountCode));
            }
            if ((VendorAccountName == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(VendorAccountName));
            }
            this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(WeightLoss));
            this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(ScrapWeight));
            if ((Remark == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(Remark));
            }
            if ((Created_By == null)) {
                throw new global::System.ArgumentNullException("Created_By");
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Created_By));
            }
            if ((DateTime_Created.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(DateTime_Created.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Modified_By == null)) {
                throw new global::System.ArgumentNullException("Modified_By");
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(Modified_By));
            }
            if ((LastStockStatusUpdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(LastStockStatusUpdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((ReferenceDocCode == null)) {
                throw new global::System.ArgumentNullException("ReferenceDocCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(ReferenceDocCode));
            }
            this.Adapter.InsertCommand.Parameters[53].Value = ((int)(LastTrsID));
            if ((LastTrsDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(LastTrsDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[55].Value = ((int)(LastTrsTypeID));
            if ((LastTrsTypeDesc == null)) {
                throw new global::System.ArgumentNullException("LastTrsTypeDesc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(LastTrsTypeDesc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int LotID, 
                    string LotName, 
                    int ItemID, 
                    string ItemName, 
                    string ItemDescription, 
                    string ItemDescription1, 
                    decimal Weight, 
                    string Shape, 
                    string Size, 
                    string Color, 
                    string Clarity, 
                    string Cut, 
                    string Polish, 
                    string Symmetry, 
                    string Fluorescence, 
                    string Inscription, 
                    string ParcelOrStone, 
                    string HoldingType, 
                    string Status, 
                    string StockStatus, 
                    int CertificateID, 
                    string CertificateLabName, 
                    string CertificateType, 
                    string CertificateNo, 
                    global::System.Nullable<global::System.DateTime> CertificateDate, 
                    decimal Cost, 
                    decimal TotalCost, 
                    decimal ListCostDiscount, 
                    decimal List, 
                    decimal TotalList, 
                    decimal ListSaleDiscount, 
                    decimal Sale, 
                    decimal TotalSale, 
                    decimal GBPSale, 
                    decimal GBPTotalSale, 
                    decimal OutList, 
                    decimal ListOutDiscount, 
                    decimal OutPrice, 
                    decimal OutTotalPrice, 
                    decimal GBPOutPrice, 
                    decimal GBPOutTotalPrice, 
                    string LocationAccountCode, 
                    string LocationAccountName, 
                    string VendorAccountCode, 
                    string VendorAccountName, 
                    decimal WeightLoss, 
                    decimal ScrapWeight, 
                    string Remark, 
                    string Created_By, 
                    global::System.Nullable<global::System.DateTime> DateTime_Created, 
                    string Modified_By, 
                    global::System.Nullable<global::System.DateTime> LastStockStatusUpdate, 
                    string ReferenceDocCode, 
                    int LastTrsID, 
                    global::System.Nullable<global::System.DateTime> LastTrsDate, 
                    int LastTrsTypeID, 
                    string LastTrsTypeDesc, 
                    int Original_LotID, 
                    string Original_LotName, 
                    int Original_ItemID, 
                    string Original_ItemName, 
                    string Original_ItemDescription, 
                    string Original_ItemDescription1, 
                    decimal Original_Weight, 
                    string Original_Shape, 
                    string Original_Size, 
                    string Original_Color, 
                    string Original_Clarity, 
                    string Original_Cut, 
                    string Original_Polish, 
                    string Original_Symmetry, 
                    string Original_Fluorescence, 
                    string Original_Inscription, 
                    string Original_ParcelOrStone, 
                    string Original_HoldingType, 
                    string Original_Status, 
                    string Original_StockStatus, 
                    int Original_CertificateID, 
                    string Original_CertificateLabName, 
                    string Original_CertificateType, 
                    string Original_CertificateNo, 
                    global::System.Nullable<global::System.DateTime> Original_CertificateDate, 
                    decimal Original_Cost, 
                    decimal Original_TotalCost, 
                    decimal Original_ListCostDiscount, 
                    decimal Original_List, 
                    decimal Original_TotalList, 
                    decimal Original_ListSaleDiscount, 
                    decimal Original_Sale, 
                    decimal Original_TotalSale, 
                    decimal Original_GBPSale, 
                    decimal Original_GBPTotalSale, 
                    decimal Original_OutList, 
                    decimal Original_ListOutDiscount, 
                    decimal Original_OutPrice, 
                    decimal Original_OutTotalPrice, 
                    decimal Original_GBPOutPrice, 
                    decimal Original_GBPOutTotalPrice, 
                    string Original_LocationAccountCode, 
                    string Original_LocationAccountName, 
                    string Original_VendorAccountCode, 
                    string Original_VendorAccountName, 
                    decimal Original_WeightLoss, 
                    decimal Original_ScrapWeight, 
                    string Original_Remark, 
                    string Original_Created_By, 
                    global::System.Nullable<global::System.DateTime> Original_DateTime_Created, 
                    string Original_Modified_By, 
                    global::System.Nullable<global::System.DateTime> Original_LastStockStatusUpdate, 
                    string Original_ReferenceDocCode, 
                    int Original_LastTrsID, 
                    global::System.Nullable<global::System.DateTime> Original_LastTrsDate, 
                    int Original_LastTrsTypeID, 
                    string Original_LastTrsTypeDesc) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(LotID));
            if ((LotName == null)) {
                throw new global::System.ArgumentNullException("LotName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LotName));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ItemID));
            if ((ItemName == null)) {
                throw new global::System.ArgumentNullException("ItemName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ItemName));
            }
            if ((ItemDescription == null)) {
                throw new global::System.ArgumentNullException("ItemDescription");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ItemDescription));
            }
            if ((ItemDescription1 == null)) {
                throw new global::System.ArgumentNullException("ItemDescription1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ItemDescription1));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Weight));
            if ((Shape == null)) {
                throw new global::System.ArgumentNullException("Shape");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Shape));
            }
            if ((Size == null)) {
                throw new global::System.ArgumentNullException("Size");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Size));
            }
            if ((Color == null)) {
                throw new global::System.ArgumentNullException("Color");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Color));
            }
            if ((Clarity == null)) {
                throw new global::System.ArgumentNullException("Clarity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Clarity));
            }
            if ((Cut == null)) {
                throw new global::System.ArgumentNullException("Cut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Cut));
            }
            if ((Polish == null)) {
                throw new global::System.ArgumentNullException("Polish");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Polish));
            }
            if ((Symmetry == null)) {
                throw new global::System.ArgumentNullException("Symmetry");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Symmetry));
            }
            if ((Fluorescence == null)) {
                throw new global::System.ArgumentNullException("Fluorescence");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Fluorescence));
            }
            if ((Inscription == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Inscription));
            }
            if ((ParcelOrStone == null)) {
                throw new global::System.ArgumentNullException("ParcelOrStone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ParcelOrStone));
            }
            if ((HoldingType == null)) {
                throw new global::System.ArgumentNullException("HoldingType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(HoldingType));
            }
            if ((Status == null)) {
                throw new global::System.ArgumentNullException("Status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Status));
            }
            if ((StockStatus == null)) {
                throw new global::System.ArgumentNullException("StockStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(StockStatus));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(CertificateID));
            if ((CertificateLabName == null)) {
                throw new global::System.ArgumentNullException("CertificateLabName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(CertificateLabName));
            }
            if ((CertificateType == null)) {
                throw new global::System.ArgumentNullException("CertificateType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(CertificateType));
            }
            if ((CertificateNo == null)) {
                throw new global::System.ArgumentNullException("CertificateNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(CertificateNo));
            }
            if ((CertificateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(CertificateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Cost));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(TotalCost));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(ListCostDiscount));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(List));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(TotalList));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(ListSaleDiscount));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Sale));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(TotalSale));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(GBPSale));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(GBPTotalSale));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(OutList));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(ListOutDiscount));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(OutPrice));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(OutTotalPrice));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(GBPOutPrice));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(GBPOutTotalPrice));
            if ((LocationAccountCode == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(LocationAccountCode));
            }
            if ((LocationAccountName == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(LocationAccountName));
            }
            if ((VendorAccountCode == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(VendorAccountCode));
            }
            if ((VendorAccountName == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(VendorAccountName));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(WeightLoss));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(ScrapWeight));
            if ((Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Remark));
            }
            if ((Created_By == null)) {
                throw new global::System.ArgumentNullException("Created_By");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Created_By));
            }
            if ((DateTime_Created.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(DateTime_Created.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Modified_By == null)) {
                throw new global::System.ArgumentNullException("Modified_By");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Modified_By));
            }
            if ((LastStockStatusUpdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(LastStockStatusUpdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((ReferenceDocCode == null)) {
                throw new global::System.ArgumentNullException("ReferenceDocCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(ReferenceDocCode));
            }
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(LastTrsID));
            if ((LastTrsDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(LastTrsDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(LastTrsTypeID));
            if ((LastTrsTypeDesc == null)) {
                throw new global::System.ArgumentNullException("LastTrsTypeDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(LastTrsTypeDesc));
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_LotID));
            if ((Original_LotName == null)) {
                throw new global::System.ArgumentNullException("Original_LotName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_LotName));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_ItemID));
            if ((Original_ItemName == null)) {
                throw new global::System.ArgumentNullException("Original_ItemName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_ItemName));
            }
            if ((Original_ItemDescription == null)) {
                throw new global::System.ArgumentNullException("Original_ItemDescription");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_ItemDescription));
            }
            if ((Original_ItemDescription1 == null)) {
                throw new global::System.ArgumentNullException("Original_ItemDescription1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_ItemDescription1));
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_Weight));
            if ((Original_Shape == null)) {
                throw new global::System.ArgumentNullException("Original_Shape");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_Shape));
            }
            if ((Original_Size == null)) {
                throw new global::System.ArgumentNullException("Original_Size");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_Size));
            }
            if ((Original_Color == null)) {
                throw new global::System.ArgumentNullException("Original_Color");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_Color));
            }
            if ((Original_Clarity == null)) {
                throw new global::System.ArgumentNullException("Original_Clarity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_Clarity));
            }
            if ((Original_Cut == null)) {
                throw new global::System.ArgumentNullException("Original_Cut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_Cut));
            }
            if ((Original_Polish == null)) {
                throw new global::System.ArgumentNullException("Original_Polish");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_Polish));
            }
            if ((Original_Symmetry == null)) {
                throw new global::System.ArgumentNullException("Original_Symmetry");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_Symmetry));
            }
            if ((Original_Fluorescence == null)) {
                throw new global::System.ArgumentNullException("Original_Fluorescence");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_Fluorescence));
            }
            if ((Original_Inscription == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_Inscription));
            }
            if ((Original_ParcelOrStone == null)) {
                throw new global::System.ArgumentNullException("Original_ParcelOrStone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_ParcelOrStone));
            }
            if ((Original_HoldingType == null)) {
                throw new global::System.ArgumentNullException("Original_HoldingType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_HoldingType));
            }
            if ((Original_Status == null)) {
                throw new global::System.ArgumentNullException("Original_Status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_Status));
            }
            if ((Original_StockStatus == null)) {
                throw new global::System.ArgumentNullException("Original_StockStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_StockStatus));
            }
            this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_CertificateID));
            if ((Original_CertificateLabName == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateLabName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_CertificateLabName));
            }
            if ((Original_CertificateType == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_CertificateType));
            }
            if ((Original_CertificateNo == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_CertificateNo));
            }
            if ((Original_CertificateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((System.DateTime)(Original_CertificateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(Original_Cost));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_TotalCost));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(Original_ListCostDiscount));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_List));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(Original_TotalList));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(Original_ListSaleDiscount));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(Original_Sale));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(Original_TotalSale));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((decimal)(Original_GBPSale));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_GBPTotalSale));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((decimal)(Original_OutList));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((decimal)(Original_ListOutDiscount));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((decimal)(Original_OutPrice));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_OutTotalPrice));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((decimal)(Original_GBPOutPrice));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_GBPOutTotalPrice));
            if ((Original_LocationAccountCode == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_LocationAccountCode));
            }
            if ((Original_LocationAccountName == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_LocationAccountName));
            }
            if ((Original_VendorAccountCode == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_VendorAccountCode));
            }
            if ((Original_VendorAccountName == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_VendorAccountName));
            }
            this.Adapter.UpdateCommand.Parameters[108].Value = ((decimal)(Original_WeightLoss));
            this.Adapter.UpdateCommand.Parameters[109].Value = ((decimal)(Original_ScrapWeight));
            if ((Original_Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_Remark));
            }
            if ((Original_Created_By == null)) {
                throw new global::System.ArgumentNullException("Original_Created_By");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_Created_By));
            }
            if ((Original_DateTime_Created.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((System.DateTime)(Original_DateTime_Created.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_By == null)) {
                throw new global::System.ArgumentNullException("Original_Modified_By");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_Modified_By));
            }
            if ((Original_LastStockStatusUpdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((System.DateTime)(Original_LastStockStatusUpdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_ReferenceDocCode == null)) {
                throw new global::System.ArgumentNullException("Original_ReferenceDocCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(Original_ReferenceDocCode));
            }
            this.Adapter.UpdateCommand.Parameters[119].Value = ((int)(Original_LastTrsID));
            if ((Original_LastTrsDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((System.DateTime)(Original_LastTrsDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[122].Value = ((int)(Original_LastTrsTypeID));
            if ((Original_LastTrsTypeDesc == null)) {
                throw new global::System.ArgumentNullException("Original_LastTrsTypeDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_LastTrsTypeDesc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string LotName, 
                    int ItemID, 
                    string ItemName, 
                    string ItemDescription, 
                    string ItemDescription1, 
                    decimal Weight, 
                    string Shape, 
                    string Size, 
                    string Color, 
                    string Clarity, 
                    string Cut, 
                    string Polish, 
                    string Symmetry, 
                    string Fluorescence, 
                    string Inscription, 
                    string ParcelOrStone, 
                    string HoldingType, 
                    string Status, 
                    string StockStatus, 
                    int CertificateID, 
                    string CertificateLabName, 
                    string CertificateType, 
                    string CertificateNo, 
                    global::System.Nullable<global::System.DateTime> CertificateDate, 
                    decimal Cost, 
                    decimal TotalCost, 
                    decimal ListCostDiscount, 
                    decimal List, 
                    decimal TotalList, 
                    decimal ListSaleDiscount, 
                    decimal Sale, 
                    decimal TotalSale, 
                    decimal GBPSale, 
                    decimal GBPTotalSale, 
                    decimal OutList, 
                    decimal ListOutDiscount, 
                    decimal OutPrice, 
                    decimal OutTotalPrice, 
                    decimal GBPOutPrice, 
                    decimal GBPOutTotalPrice, 
                    string LocationAccountCode, 
                    string LocationAccountName, 
                    string VendorAccountCode, 
                    string VendorAccountName, 
                    decimal WeightLoss, 
                    decimal ScrapWeight, 
                    string Remark, 
                    string Created_By, 
                    global::System.Nullable<global::System.DateTime> DateTime_Created, 
                    string Modified_By, 
                    global::System.Nullable<global::System.DateTime> LastStockStatusUpdate, 
                    string ReferenceDocCode, 
                    int LastTrsID, 
                    global::System.Nullable<global::System.DateTime> LastTrsDate, 
                    int LastTrsTypeID, 
                    string LastTrsTypeDesc, 
                    int Original_LotID, 
                    string Original_LotName, 
                    int Original_ItemID, 
                    string Original_ItemName, 
                    string Original_ItemDescription, 
                    string Original_ItemDescription1, 
                    decimal Original_Weight, 
                    string Original_Shape, 
                    string Original_Size, 
                    string Original_Color, 
                    string Original_Clarity, 
                    string Original_Cut, 
                    string Original_Polish, 
                    string Original_Symmetry, 
                    string Original_Fluorescence, 
                    string Original_Inscription, 
                    string Original_ParcelOrStone, 
                    string Original_HoldingType, 
                    string Original_Status, 
                    string Original_StockStatus, 
                    int Original_CertificateID, 
                    string Original_CertificateLabName, 
                    string Original_CertificateType, 
                    string Original_CertificateNo, 
                    global::System.Nullable<global::System.DateTime> Original_CertificateDate, 
                    decimal Original_Cost, 
                    decimal Original_TotalCost, 
                    decimal Original_ListCostDiscount, 
                    decimal Original_List, 
                    decimal Original_TotalList, 
                    decimal Original_ListSaleDiscount, 
                    decimal Original_Sale, 
                    decimal Original_TotalSale, 
                    decimal Original_GBPSale, 
                    decimal Original_GBPTotalSale, 
                    decimal Original_OutList, 
                    decimal Original_ListOutDiscount, 
                    decimal Original_OutPrice, 
                    decimal Original_OutTotalPrice, 
                    decimal Original_GBPOutPrice, 
                    decimal Original_GBPOutTotalPrice, 
                    string Original_LocationAccountCode, 
                    string Original_LocationAccountName, 
                    string Original_VendorAccountCode, 
                    string Original_VendorAccountName, 
                    decimal Original_WeightLoss, 
                    decimal Original_ScrapWeight, 
                    string Original_Remark, 
                    string Original_Created_By, 
                    global::System.Nullable<global::System.DateTime> Original_DateTime_Created, 
                    string Original_Modified_By, 
                    global::System.Nullable<global::System.DateTime> Original_LastStockStatusUpdate, 
                    string Original_ReferenceDocCode, 
                    int Original_LastTrsID, 
                    global::System.Nullable<global::System.DateTime> Original_LastTrsDate, 
                    int Original_LastTrsTypeID, 
                    string Original_LastTrsTypeDesc) {
            return this.Update(Original_LotID, LotName, ItemID, ItemName, ItemDescription, ItemDescription1, Weight, Shape, Size, Color, Clarity, Cut, Polish, Symmetry, Fluorescence, Inscription, ParcelOrStone, HoldingType, Status, StockStatus, CertificateID, CertificateLabName, CertificateType, CertificateNo, CertificateDate, Cost, TotalCost, ListCostDiscount, List, TotalList, ListSaleDiscount, Sale, TotalSale, GBPSale, GBPTotalSale, OutList, ListOutDiscount, OutPrice, OutTotalPrice, GBPOutPrice, GBPOutTotalPrice, LocationAccountCode, LocationAccountName, VendorAccountCode, VendorAccountName, WeightLoss, ScrapWeight, Remark, Created_By, DateTime_Created, Modified_By, LastStockStatusUpdate, ReferenceDocCode, LastTrsID, LastTrsDate, LastTrsTypeID, LastTrsTypeDesc, Original_LotID, Original_LotName, Original_ItemID, Original_ItemName, Original_ItemDescription, Original_ItemDescription1, Original_Weight, Original_Shape, Original_Size, Original_Color, Original_Clarity, Original_Cut, Original_Polish, Original_Symmetry, Original_Fluorescence, Original_Inscription, Original_ParcelOrStone, Original_HoldingType, Original_Status, Original_StockStatus, Original_CertificateID, Original_CertificateLabName, Original_CertificateType, Original_CertificateNo, Original_CertificateDate, Original_Cost, Original_TotalCost, Original_ListCostDiscount, Original_List, Original_TotalList, Original_ListSaleDiscount, Original_Sale, Original_TotalSale, Original_GBPSale, Original_GBPTotalSale, Original_OutList, Original_ListOutDiscount, Original_OutPrice, Original_OutTotalPrice, Original_GBPOutPrice, Original_GBPOutTotalPrice, Original_LocationAccountCode, Original_LocationAccountName, Original_VendorAccountCode, Original_VendorAccountName, Original_WeightLoss, Original_ScrapWeight, Original_Remark, Original_Created_By, Original_DateTime_Created, Original_Modified_By, Original_LastStockStatusUpdate, Original_ReferenceDocCode, Original_LastTrsID, Original_LastTrsDate, Original_LastTrsTypeID, Original_LastTrsTypeDesc);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class THXADiamondPriceStockHistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public THXADiamondPriceStockHistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "THXADiamondPriceStockHistory";
            tableMapping.ColumnMappings.Add("TrsID", "TrsID");
            tableMapping.ColumnMappings.Add("TrsTypeID", "TrsTypeID");
            tableMapping.ColumnMappings.Add("TrsTypeDesc", "TrsTypeDesc");
            tableMapping.ColumnMappings.Add("TrsDate", "TrsDate");
            tableMapping.ColumnMappings.Add("ReferenceCode", "ReferenceCode");
            tableMapping.ColumnMappings.Add("ReferenceSrNo", "ReferenceSrNo");
            tableMapping.ColumnMappings.Add("LotID", "LotID");
            tableMapping.ColumnMappings.Add("ItemID", "ItemID");
            tableMapping.ColumnMappings.Add("LotName", "LotName");
            tableMapping.ColumnMappings.Add("ParcelOrStone", "ParcelOrStone");
            tableMapping.ColumnMappings.Add("NaturalOrLabGrown", "NaturalOrLabGrown");
            tableMapping.ColumnMappings.Add("CertificateID", "CertificateID");
            tableMapping.ColumnMappings.Add("CertificateLabName", "CertificateLabName");
            tableMapping.ColumnMappings.Add("CertificateType", "CertificateType");
            tableMapping.ColumnMappings.Add("CertificateNo", "CertificateNo");
            tableMapping.ColumnMappings.Add("Shape", "Shape");
            tableMapping.ColumnMappings.Add("Size", "Size");
            tableMapping.ColumnMappings.Add("Color", "Color");
            tableMapping.ColumnMappings.Add("Clarity", "Clarity");
            tableMapping.ColumnMappings.Add("OriginalWeight", "OriginalWeight");
            tableMapping.ColumnMappings.Add("WeightIn", "WeightIn");
            tableMapping.ColumnMappings.Add("WeightOut", "WeightOut");
            tableMapping.ColumnMappings.Add("WeightBalance", "WeightBalance");
            tableMapping.ColumnMappings.Add("WeightLoss", "WeightLoss");
            tableMapping.ColumnMappings.Add("ScrapWeight", "ScrapWeight");
            tableMapping.ColumnMappings.Add("Cost", "Cost");
            tableMapping.ColumnMappings.Add("TrsTotalCost", "TrsTotalCost");
            tableMapping.ColumnMappings.Add("ParcelAvgCost", "ParcelAvgCost");
            tableMapping.ColumnMappings.Add("ListCostDiscount", "ListCostDiscount");
            tableMapping.ColumnMappings.Add("List", "List");
            tableMapping.ColumnMappings.Add("TotalList", "TotalList");
            tableMapping.ColumnMappings.Add("ListSaleDiscount", "ListSaleDiscount");
            tableMapping.ColumnMappings.Add("Sale", "Sale");
            tableMapping.ColumnMappings.Add("TotalSale", "TotalSale");
            tableMapping.ColumnMappings.Add("GBPSale", "GBPSale");
            tableMapping.ColumnMappings.Add("GBPTotalSale", "GBPTotalSale");
            tableMapping.ColumnMappings.Add("OutList", "OutList");
            tableMapping.ColumnMappings.Add("ListOutDiscount", "ListOutDiscount");
            tableMapping.ColumnMappings.Add("OutPrice", "OutPrice");
            tableMapping.ColumnMappings.Add("OutTotalPrice", "OutTotalPrice");
            tableMapping.ColumnMappings.Add("GBPOutPrice", "GBPOutPrice");
            tableMapping.ColumnMappings.Add("GBPOutTotalPrice", "GBPOutTotalPrice");
            tableMapping.ColumnMappings.Add("ExchangeRate", "ExchangeRate");
            tableMapping.ColumnMappings.Add("LocationAccountCode", "LocationAccountCode");
            tableMapping.ColumnMappings.Add("LocationAccountName", "LocationAccountName");
            tableMapping.ColumnMappings.Add("VendorAccountCode", "VendorAccountCode");
            tableMapping.ColumnMappings.Add("VendorAccountName", "VendorAccountName");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("Created_By", "Created_By");
            tableMapping.ColumnMappings.Add("TotalCost", "TotalCost");
            tableMapping.ColumnMappings.Add("TrsDocID", "TrsDocID");
            tableMapping.ColumnMappings.Add("TrsDocLine", "TrsDocLine");
            tableMapping.ColumnMappings.Add("DocTypeID", "DocTypeID");
            tableMapping.ColumnMappings.Add("DocID", "DocID");
            tableMapping.ColumnMappings.Add("DocLineDto", "DocLineDto");
            tableMapping.ColumnMappings.Add("DocDate", "DocDate");
            tableMapping.ColumnMappings.Add("SourceDocTypeID", "SourceDocTypeID");
            tableMapping.ColumnMappings.Add("SourceDocID", "SourceDocID");
            tableMapping.ColumnMappings.Add("SourceDocLine", "SourceDocLine");
            tableMapping.ColumnMappings.Add("TrsUnionID", "TrsUnionID");
            tableMapping.ColumnMappings.Add("DocTypeDesc", "DocTypeDesc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[THXADiamondPriceStockHistory] WHERE (([TrsID] = @Original_TrsI" +
                "D) AND ([TrsTypeID] = @Original_TrsTypeID) AND ([TrsTypeDesc] = @Original_TrsTyp" +
                "eDesc) AND ((@IsNull_TrsDate = 1 AND [TrsDate] IS NULL) OR ([TrsDate] = @Origina" +
                "l_TrsDate)) AND ([ReferenceCode] = @Original_ReferenceCode) AND ([ReferenceSrNo]" +
                " = @Original_ReferenceSrNo) AND ([LotID] = @Original_LotID) AND ([ItemID] = @Ori" +
                "ginal_ItemID) AND ([LotName] = @Original_LotName) AND ([ParcelOrStone] = @Origin" +
                "al_ParcelOrStone) AND ([NaturalOrLabGrown] = @Original_NaturalOrLabGrown) AND ([" +
                "CertificateID] = @Original_CertificateID) AND ([CertificateLabName] = @Original_" +
                "CertificateLabName) AND ([CertificateType] = @Original_CertificateType) AND ([Ce" +
                "rtificateNo] = @Original_CertificateNo) AND ([Shape] = @Original_Shape) AND ([Si" +
                "ze] = @Original_Size) AND ([Color] = @Original_Color) AND ([Clarity] = @Original" +
                "_Clarity) AND ([OriginalWeight] = @Original_OriginalWeight) AND ([WeightIn] = @O" +
                "riginal_WeightIn) AND ([WeightOut] = @Original_WeightOut) AND ([WeightBalance] =" +
                " @Original_WeightBalance) AND ([WeightLoss] = @Original_WeightLoss) AND ([ScrapW" +
                "eight] = @Original_ScrapWeight) AND ([Cost] = @Original_Cost) AND ([TrsTotalCost" +
                "] = @Original_TrsTotalCost) AND ([ParcelAvgCost] = @Original_ParcelAvgCost) AND " +
                "([ListCostDiscount] = @Original_ListCostDiscount) AND ([List] = @Original_List) " +
                "AND ([TotalList] = @Original_TotalList) AND ([ListSaleDiscount] = @Original_List" +
                "SaleDiscount) AND ([Sale] = @Original_Sale) AND ([TotalSale] = @Original_TotalSa" +
                "le) AND ([GBPSale] = @Original_GBPSale) AND ([GBPTotalSale] = @Original_GBPTotal" +
                "Sale) AND ([OutList] = @Original_OutList) AND ([ListOutDiscount] = @Original_Lis" +
                "tOutDiscount) AND ([OutPrice] = @Original_OutPrice) AND ([OutTotalPrice] = @Orig" +
                "inal_OutTotalPrice) AND ([GBPOutPrice] = @Original_GBPOutPrice) AND ([GBPOutTota" +
                "lPrice] = @Original_GBPOutTotalPrice) AND ([ExchangeRate] = @Original_ExchangeRa" +
                "te) AND ([LocationAccountCode] = @Original_LocationAccountCode) AND ([LocationAc" +
                "countName] = @Original_LocationAccountName) AND ([VendorAccountCode] = @Original" +
                "_VendorAccountCode) AND ([VendorAccountName] = @Original_VendorAccountName) AND " +
                "([Remark] = @Original_Remark) AND ([Created_By] = @Original_Created_By) AND ([To" +
                "talCost] = @Original_TotalCost) AND ((@IsNull_TrsDocID = 1 AND [TrsDocID] IS NUL" +
                "L) OR ([TrsDocID] = @Original_TrsDocID)) AND ((@IsNull_TrsDocLine = 1 AND [TrsDo" +
                "cLine] IS NULL) OR ([TrsDocLine] = @Original_TrsDocLine)) AND ((@IsNull_DocTypeI" +
                "D = 1 AND [DocTypeID] IS NULL) OR ([DocTypeID] = @Original_DocTypeID)) AND ((@Is" +
                "Null_DocID = 1 AND [DocID] IS NULL) OR ([DocID] = @Original_DocID)) AND ((@IsNul" +
                "l_DocLine = 1 AND [DocLineDto] IS NULL) OR ([DocLineDto] = @Original_DocLine)) AND ((@" +
                "IsNull_DocDate = 1 AND [DocDate] IS NULL) OR ([DocDate] = @Original_DocDate)) AN" +
                "D ((@IsNull_SourceDocTypeID = 1 AND [SourceDocTypeID] IS NULL) OR ([SourceDocTyp" +
                "eID] = @Original_SourceDocTypeID)) AND ((@IsNull_SourceDocID = 1 AND [SourceDocI" +
                "D] IS NULL) OR ([SourceDocID] = @Original_SourceDocID)) AND ((@IsNull_SourceDocL" +
                "ine = 1 AND [SourceDocLine] IS NULL) OR ([SourceDocLine] = @Original_SourceDocLi" +
                "ne)) AND ((@IsNull_TrsUnionID = 1 AND [TrsUnionID] IS NULL) OR ([TrsUnionID] = @" +
                "Original_TrsUnionID)) AND ((@IsNull_DocTypeDesc = 1 AND [DocTypeDesc] IS NULL) O" +
                "R ([DocTypeDesc] = @Original_DocTypeDesc)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsTypeDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrsDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReferenceCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReferenceSrNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceSrNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParcelOrStone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParcelOrStone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NaturalOrLabGrown", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NaturalOrLabGrown", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateLabName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateLabName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shape", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clarity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "OriginalWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightIn", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightIn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightOut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightBalance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightLoss", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightLoss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScrapWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ScrapWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsTotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TrsTotalCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParcelAvgCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ParcelAvgCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListCostDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListCostDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_List", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "List", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListSaleDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListSaleDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Sale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPTotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPTotalSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListOutDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListOutDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutTotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPOutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPOutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutTotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 3, "ExchangeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrsDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrsDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocLine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocLine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocLineDto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocLineDto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceDocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocTypeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceDocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocLine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocLine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrsUnionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsUnionID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsUnionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsUnionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocTypeDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[THXADiamondPriceStockHistory] ([TrsTypeID], [TrsTypeDesc], [Tr" +
                "sDate], [ReferenceCode], [ReferenceSrNo], [LotID], [ItemID], [LotName], [ParcelO" +
                "rStone], [NaturalOrLabGrown], [CertificateID], [CertificateLabName], [Certificat" +
                "eType], [CertificateNo], [Shape], [Size], [Color], [Clarity], [OriginalWeight], " +
                "[WeightIn], [WeightOut], [WeightBalance], [WeightLoss], [ScrapWeight], [Cost], [" +
                "TrsTotalCost], [ParcelAvgCost], [ListCostDiscount], [List], [TotalList], [ListSa" +
                "leDiscount], [Sale], [TotalSale], [GBPSale], [GBPTotalSale], [OutList], [ListOut" +
                "Discount], [OutPrice], [OutTotalPrice], [GBPOutPrice], [GBPOutTotalPrice], [Exch" +
                "angeRate], [LocationAccountCode], [LocationAccountName], [VendorAccountCode], [V" +
                "endorAccountName], [Remark], [Created_By], [TotalCost], [TrsDocID], [TrsDocLine]" +
                ", [DocTypeID], [DocID], [DocLineDto], [DocDate], [SourceDocTypeID], [SourceDocID], " +
                "[SourceDocLine], [TrsUnionID], [DocTypeDesc]) VALUES (@TrsTypeID, @TrsTypeDesc, " +
                "@TrsDate, @ReferenceCode, @ReferenceSrNo, @LotID, @ItemID, @LotName, @ParcelOrSt" +
                "one, @NaturalOrLabGrown, @CertificateID, @CertificateLabName, @CertificateType, " +
                "@CertificateNo, @Shape, @Size, @Color, @Clarity, @OriginalWeight, @WeightIn, @We" +
                "ightOut, @WeightBalance, @WeightLoss, @ScrapWeight, @Cost, @TrsTotalCost, @Parce" +
                "lAvgCost, @ListCostDiscount, @List, @TotalList, @ListSaleDiscount, @Sale, @Total" +
                "Sale, @GBPSale, @GBPTotalSale, @OutList, @ListOutDiscount, @OutPrice, @OutTotalP" +
                "rice, @GBPOutPrice, @GBPOutTotalPrice, @ExchangeRate, @LocationAccountCode, @Loc" +
                "ationAccountName, @VendorAccountCode, @VendorAccountName, @Remark, @Created_By, " +
                "@TotalCost, @TrsDocID, @TrsDocLine, @DocTypeID, @DocID, @DocLineDto, @DocDate, @Sou" +
                "rceDocTypeID, @SourceDocID, @SourceDocLine, @TrsUnionID, @DocTypeDesc);\r\nSELECT " +
                "TrsID, TrsTypeID, TrsTypeDesc, TrsDate, ReferenceCode, ReferenceSrNo, LotID, Ite" +
                "mID, LotName, ParcelOrStone, NaturalOrLabGrown, CertificateID, CertificateLabNam" +
                "e, CertificateType, CertificateNo, Shape, Size, Color, Clarity, OriginalWeight, " +
                "WeightIn, WeightOut, WeightBalance, WeightLoss, ScrapWeight, Cost, TrsTotalCost," +
                " ParcelAvgCost, ListCostDiscount, List, TotalList, ListSaleDiscount, Sale, Total" +
                "Sale, GBPSale, GBPTotalSale, OutList, ListOutDiscount, OutPrice, OutTotalPrice, " +
                "GBPOutPrice, GBPOutTotalPrice, ExchangeRate, LocationAccountCode, LocationAccoun" +
                "tName, VendorAccountCode, VendorAccountName, Remark, Created_By, TotalCost, TrsD" +
                "ocID, TrsDocLine, DocTypeID, DocID, DocLineDto, DocDate, SourceDocTypeID, SourceDoc" +
                "ID, SourceDocLine, TrsUnionID, DocTypeDesc FROM THXADiamondPriceStockHistory WHE" +
                "RE (TrsID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenceCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenceSrNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceSrNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParcelOrStone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParcelOrStone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NaturalOrLabGrown", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NaturalOrLabGrown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateLabName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateLabName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shape", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clarity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "OriginalWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightIn", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightOut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightBalance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightLoss", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightLoss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ScrapWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsTotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TrsTotalCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParcelAvgCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ParcelAvgCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListCostDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListCostDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "List", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListSaleDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListSaleDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Sale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPTotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPTotalSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListOutDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListOutDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutTotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPOutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPOutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutTotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 3, "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocLineDto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocLineDto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceDocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsUnionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsUnionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[THXADiamondPriceStockHistory] SET [TrsTypeID] = @TrsTypeID, [TrsTyp" +
                "eDesc] = @TrsTypeDesc, [TrsDate] = @TrsDate, [ReferenceCode] = @ReferenceCode, [" +
                "ReferenceSrNo] = @ReferenceSrNo, [LotID] = @LotID, [ItemID] = @ItemID, [LotName]" +
                " = @LotName, [ParcelOrStone] = @ParcelOrStone, [NaturalOrLabGrown] = @NaturalOrL" +
                "abGrown, [CertificateID] = @CertificateID, [CertificateLabName] = @CertificateLa" +
                "bName, [CertificateType] = @CertificateType, [CertificateNo] = @CertificateNo, [" +
                "Shape] = @Shape, [Size] = @Size, [Color] = @Color, [Clarity] = @Clarity, [Origin" +
                "alWeight] = @OriginalWeight, [WeightIn] = @WeightIn, [WeightOut] = @WeightOut, [" +
                "WeightBalance] = @WeightBalance, [WeightLoss] = @WeightLoss, [ScrapWeight] = @Sc" +
                "rapWeight, [Cost] = @Cost, [TrsTotalCost] = @TrsTotalCost, [ParcelAvgCost] = @Pa" +
                "rcelAvgCost, [ListCostDiscount] = @ListCostDiscount, [List] = @List, [TotalList]" +
                " = @TotalList, [ListSaleDiscount] = @ListSaleDiscount, [Sale] = @Sale, [TotalSal" +
                "e] = @TotalSale, [GBPSale] = @GBPSale, [GBPTotalSale] = @GBPTotalSale, [OutList]" +
                " = @OutList, [ListOutDiscount] = @ListOutDiscount, [OutPrice] = @OutPrice, [OutT" +
                "otalPrice] = @OutTotalPrice, [GBPOutPrice] = @GBPOutPrice, [GBPOutTotalPrice] = " +
                "@GBPOutTotalPrice, [ExchangeRate] = @ExchangeRate, [LocationAccountCode] = @Loca" +
                "tionAccountCode, [LocationAccountName] = @LocationAccountName, [VendorAccountCod" +
                "e] = @VendorAccountCode, [VendorAccountName] = @VendorAccountName, [Remark] = @R" +
                "emark, [Created_By] = @Created_By, [TotalCost] = @TotalCost, [TrsDocID] = @TrsDo" +
                "cID, [TrsDocLine] = @TrsDocLine, [DocTypeID] = @DocTypeID, [DocID] = @DocID, [Do" +
                "cLine] = @DocLineDto, [DocDate] = @DocDate, [SourceDocTypeID] = @SourceDocTypeID, [" +
                "SourceDocID] = @SourceDocID, [SourceDocLine] = @SourceDocLine, [TrsUnionID] = @T" +
                "rsUnionID, [DocTypeDesc] = @DocTypeDesc WHERE (([TrsID] = @Original_TrsID) AND (" +
                "[TrsTypeID] = @Original_TrsTypeID) AND ([TrsTypeDesc] = @Original_TrsTypeDesc) A" +
                "ND ((@IsNull_TrsDate = 1 AND [TrsDate] IS NULL) OR ([TrsDate] = @Original_TrsDat" +
                "e)) AND ([ReferenceCode] = @Original_ReferenceCode) AND ([ReferenceSrNo] = @Orig" +
                "inal_ReferenceSrNo) AND ([LotID] = @Original_LotID) AND ([ItemID] = @Original_It" +
                "emID) AND ([LotName] = @Original_LotName) AND ([ParcelOrStone] = @Original_Parce" +
                "lOrStone) AND ([NaturalOrLabGrown] = @Original_NaturalOrLabGrown) AND ([Certific" +
                "ateID] = @Original_CertificateID) AND ([CertificateLabName] = @Original_Certific" +
                "ateLabName) AND ([CertificateType] = @Original_CertificateType) AND ([Certificat" +
                "eNo] = @Original_CertificateNo) AND ([Shape] = @Original_Shape) AND ([Size] = @O" +
                "riginal_Size) AND ([Color] = @Original_Color) AND ([Clarity] = @Original_Clarity" +
                ") AND ([OriginalWeight] = @Original_OriginalWeight) AND ([WeightIn] = @Original_" +
                "WeightIn) AND ([WeightOut] = @Original_WeightOut) AND ([WeightBalance] = @Origin" +
                "al_WeightBalance) AND ([WeightLoss] = @Original_WeightLoss) AND ([ScrapWeight] =" +
                " @Original_ScrapWeight) AND ([Cost] = @Original_Cost) AND ([TrsTotalCost] = @Ori" +
                "ginal_TrsTotalCost) AND ([ParcelAvgCost] = @Original_ParcelAvgCost) AND ([ListCo" +
                "stDiscount] = @Original_ListCostDiscount) AND ([List] = @Original_List) AND ([To" +
                "talList] = @Original_TotalList) AND ([ListSaleDiscount] = @Original_ListSaleDisc" +
                "ount) AND ([Sale] = @Original_Sale) AND ([TotalSale] = @Original_TotalSale) AND " +
                "([GBPSale] = @Original_GBPSale) AND ([GBPTotalSale] = @Original_GBPTotalSale) AN" +
                "D ([OutList] = @Original_OutList) AND ([ListOutDiscount] = @Original_ListOutDisc" +
                "ount) AND ([OutPrice] = @Original_OutPrice) AND ([OutTotalPrice] = @Original_Out" +
                "TotalPrice) AND ([GBPOutPrice] = @Original_GBPOutPrice) AND ([GBPOutTotalPrice] " +
                "= @Original_GBPOutTotalPrice) AND ([ExchangeRate] = @Original_ExchangeRate) AND " +
                "([LocationAccountCode] = @Original_LocationAccountCode) AND ([LocationAccountNam" +
                "e] = @Original_LocationAccountName) AND ([VendorAccountCode] = @Original_VendorA" +
                "ccountCode) AND ([VendorAccountName] = @Original_VendorAccountName) AND ([Remark" +
                "] = @Original_Remark) AND ([Created_By] = @Original_Created_By) AND ([TotalCost]" +
                " = @Original_TotalCost) AND ((@IsNull_TrsDocID = 1 AND [TrsDocID] IS NULL) OR ([" +
                "TrsDocID] = @Original_TrsDocID)) AND ((@IsNull_TrsDocLine = 1 AND [TrsDocLine] I" +
                "S NULL) OR ([TrsDocLine] = @Original_TrsDocLine)) AND ((@IsNull_DocTypeID = 1 AN" +
                "D [DocTypeID] IS NULL) OR ([DocTypeID] = @Original_DocTypeID)) AND ((@IsNull_Doc" +
                "ID = 1 AND [DocID] IS NULL) OR ([DocID] = @Original_DocID)) AND ((@IsNull_DocLin" +
                "e = 1 AND [DocLineDto] IS NULL) OR ([DocLineDto] = @Original_DocLine)) AND ((@IsNull_D" +
                "ocDate = 1 AND [DocDate] IS NULL) OR ([DocDate] = @Original_DocDate)) AND ((@IsN" +
                "ull_SourceDocTypeID = 1 AND [SourceDocTypeID] IS NULL) OR ([SourceDocTypeID] = @" +
                "Original_SourceDocTypeID)) AND ((@IsNull_SourceDocID = 1 AND [SourceDocID] IS NU" +
                "LL) OR ([SourceDocID] = @Original_SourceDocID)) AND ((@IsNull_SourceDocLine = 1 " +
                "AND [SourceDocLine] IS NULL) OR ([SourceDocLine] = @Original_SourceDocLine)) AND" +
                " ((@IsNull_TrsUnionID = 1 AND [TrsUnionID] IS NULL) OR ([TrsUnionID] = @Original" +
                "_TrsUnionID)) AND ((@IsNull_DocTypeDesc = 1 AND [DocTypeDesc] IS NULL) OR ([DocT" +
                "ypeDesc] = @Original_DocTypeDesc)));\r\nSELECT TrsID, TrsTypeID, TrsTypeDesc, TrsD" +
                "ate, ReferenceCode, ReferenceSrNo, LotID, ItemID, LotName, ParcelOrStone, Natura" +
                "lOrLabGrown, CertificateID, CertificateLabName, CertificateType, CertificateNo, " +
                "Shape, Size, Color, Clarity, OriginalWeight, WeightIn, WeightOut, WeightBalance," +
                " WeightLoss, ScrapWeight, Cost, TrsTotalCost, ParcelAvgCost, ListCostDiscount, L" +
                "ist, TotalList, ListSaleDiscount, Sale, TotalSale, GBPSale, GBPTotalSale, OutLis" +
                "t, ListOutDiscount, OutPrice, OutTotalPrice, GBPOutPrice, GBPOutTotalPrice, Exch" +
                "angeRate, LocationAccountCode, LocationAccountName, VendorAccountCode, VendorAcc" +
                "ountName, Remark, Created_By, TotalCost, TrsDocID, TrsDocLine, DocTypeID, DocID," +
                " DocLineDto, DocDate, SourceDocTypeID, SourceDocID, SourceDocLine, TrsUnionID, DocT" +
                "ypeDesc FROM THXADiamondPriceStockHistory WHERE (TrsID = @TrsID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenceCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenceSrNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceSrNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParcelOrStone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParcelOrStone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NaturalOrLabGrown", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NaturalOrLabGrown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateLabName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateLabName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shape", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clarity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "OriginalWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightIn", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightOut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightBalance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeightLoss", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightLoss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScrapWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ScrapWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsTotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TrsTotalCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParcelAvgCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ParcelAvgCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListCostDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListCostDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "List", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListSaleDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListSaleDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Sale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPTotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPTotalSale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListOutDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListOutDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutTotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPOutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GBPOutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutTotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 3, "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocLineDto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocLineDto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceDocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsUnionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsUnionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsTypeDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrsDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReferenceCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReferenceSrNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceSrNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LotName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParcelOrStone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParcelOrStone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NaturalOrLabGrown", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NaturalOrLabGrown", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateLabName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateLabName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shape", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shape", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clarity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "OriginalWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightIn", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightIn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightOut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightBalance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeightLoss", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "WeightLoss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScrapWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ScrapWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsTotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TrsTotalCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParcelAvgCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ParcelAvgCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListCostDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListCostDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_List", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "List", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListSaleDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListSaleDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "Sale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPTotalSale", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPTotalSale", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutList", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutList", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListOutDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "ListOutDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "OutTotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPOutPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GBPOutTotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "GBPOutTotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 3, "ExchangeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationAccountName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorAccountCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorAccountName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAccountName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCost", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 2, "TotalCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrsDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrsDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocLine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsDocLine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocLineDto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocLineDto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceDocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocTypeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceDocTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceDocID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocLine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceDocLine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceDocLine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TrsUnionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsUnionID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrsUnionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrsUnionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DocTypeDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DocTypeDesc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DocTypeDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrsID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TrsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=THLDB1SER\\THLSTORE;Initial Catalog=DevTHLStore;User ID=devthlsqlluser" +
                ";Password=D34vth5ql;Encrypt=False";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT TrsID, TrsTypeID, TrsTypeDesc, TrsDate, ReferenceCode, ReferenceSrNo, LotID, ItemID, LotName, ParcelOrStone, NaturalOrLabGrown, CertificateID, CertificateLabName, CertificateType, CertificateNo, Shape, Size, Color, Clarity, OriginalWeight, WeightIn, WeightOut, WeightBalance, WeightLoss, ScrapWeight, Cost, TrsTotalCost, ParcelAvgCost, ListCostDiscount, List, TotalList, ListSaleDiscount, Sale, TotalSale, GBPSale, GBPTotalSale, OutList, ListOutDiscount, OutPrice, OutTotalPrice, GBPOutPrice, GBPOutTotalPrice, ExchangeRate, LocationAccountCode, LocationAccountName, VendorAccountCode, VendorAccountName, Remark, Created_By, TotalCost, TrsDocID, TrsDocLine, DocTypeID, DocID, DocLineDto, DocDate, SourceDocTypeID, SourceDocID, SourceDocLine, TrsUnionID, DocTypeDesc FROM dbo.THXADiamondPriceStockHistory";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DevTHLStoreDataSet.THXADiamondPriceStockHistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DevTHLStoreDataSet.THXADiamondPriceStockHistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DevTHLStoreDataSet.THXADiamondPriceStockHistoryDataTable dataTable = new DevTHLStoreDataSet.THXADiamondPriceStockHistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DevTHLStoreDataSet.THXADiamondPriceStockHistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DevTHLStoreDataSet dataSet) {
            return this.Adapter.Update(dataSet, "THXADiamondPriceStockHistory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_TrsID, 
                    int Original_TrsTypeID, 
                    string Original_TrsTypeDesc, 
                    global::System.Nullable<global::System.DateTime> Original_TrsDate, 
                    string Original_ReferenceCode, 
                    int Original_ReferenceSrNo, 
                    int Original_LotID, 
                    int Original_ItemID, 
                    string Original_LotName, 
                    string Original_ParcelOrStone, 
                    string Original_NaturalOrLabGrown, 
                    int Original_CertificateID, 
                    string Original_CertificateLabName, 
                    string Original_CertificateType, 
                    string Original_CertificateNo, 
                    string Original_Shape, 
                    string Original_Size, 
                    string Original_Color, 
                    string Original_Clarity, 
                    decimal Original_OriginalWeight, 
                    decimal Original_WeightIn, 
                    decimal Original_WeightOut, 
                    decimal Original_WeightBalance, 
                    decimal Original_WeightLoss, 
                    decimal Original_ScrapWeight, 
                    decimal Original_Cost, 
                    decimal Original_TrsTotalCost, 
                    decimal Original_ParcelAvgCost, 
                    decimal Original_ListCostDiscount, 
                    decimal Original_List, 
                    decimal Original_TotalList, 
                    decimal Original_ListSaleDiscount, 
                    decimal Original_Sale, 
                    decimal Original_TotalSale, 
                    decimal Original_GBPSale, 
                    decimal Original_GBPTotalSale, 
                    decimal Original_OutList, 
                    decimal Original_ListOutDiscount, 
                    decimal Original_OutPrice, 
                    decimal Original_OutTotalPrice, 
                    decimal Original_GBPOutPrice, 
                    decimal Original_GBPOutTotalPrice, 
                    decimal Original_ExchangeRate, 
                    string Original_LocationAccountCode, 
                    string Original_LocationAccountName, 
                    string Original_VendorAccountCode, 
                    string Original_VendorAccountName, 
                    string Original_Remark, 
                    string Original_Created_By, 
                    decimal Original_TotalCost, 
                    global::System.Nullable<int> Original_TrsDocID, 
                    global::System.Nullable<int> Original_TrsDocLine, 
                    global::System.Nullable<int> Original_DocTypeID, 
                    global::System.Nullable<int> Original_DocID, 
                    global::System.Nullable<int> Original_DocLine, 
                    global::System.Nullable<global::System.DateTime> Original_DocDate, 
                    global::System.Nullable<int> Original_SourceDocTypeID, 
                    global::System.Nullable<int> Original_SourceDocID, 
                    global::System.Nullable<int> Original_SourceDocLine, 
                    global::System.Nullable<int> Original_TrsUnionID, 
                    string Original_DocTypeDesc) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TrsID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_TrsTypeID));
            if ((Original_TrsTypeDesc == null)) {
                throw new global::System.ArgumentNullException("Original_TrsTypeDesc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TrsTypeDesc));
            }
            if ((Original_TrsDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_TrsDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ReferenceCode == null)) {
                throw new global::System.ArgumentNullException("Original_ReferenceCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ReferenceCode));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ReferenceSrNo));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_LotID));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ItemID));
            if ((Original_LotName == null)) {
                throw new global::System.ArgumentNullException("Original_LotName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_LotName));
            }
            if ((Original_ParcelOrStone == null)) {
                throw new global::System.ArgumentNullException("Original_ParcelOrStone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ParcelOrStone));
            }
            if ((Original_NaturalOrLabGrown == null)) {
                throw new global::System.ArgumentNullException("Original_NaturalOrLabGrown");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_NaturalOrLabGrown));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_CertificateID));
            if ((Original_CertificateLabName == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateLabName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_CertificateLabName));
            }
            if ((Original_CertificateType == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_CertificateType));
            }
            if ((Original_CertificateNo == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_CertificateNo));
            }
            if ((Original_Shape == null)) {
                throw new global::System.ArgumentNullException("Original_Shape");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Shape));
            }
            if ((Original_Size == null)) {
                throw new global::System.ArgumentNullException("Original_Size");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Size));
            }
            if ((Original_Color == null)) {
                throw new global::System.ArgumentNullException("Original_Color");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Color));
            }
            if ((Original_Clarity == null)) {
                throw new global::System.ArgumentNullException("Original_Clarity");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Clarity));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_OriginalWeight));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_WeightIn));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_WeightOut));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_WeightBalance));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_WeightLoss));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_ScrapWeight));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_Cost));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_TrsTotalCost));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_ParcelAvgCost));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_ListCostDiscount));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_List));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_TotalList));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_ListSaleDiscount));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((decimal)(Original_Sale));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_TotalSale));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((decimal)(Original_GBPSale));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_GBPTotalSale));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_OutList));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_ListOutDiscount));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((decimal)(Original_OutPrice));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_OutTotalPrice));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_GBPOutPrice));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_GBPOutTotalPrice));
            this.Adapter.DeleteCommand.Parameters[43].Value = ((decimal)(Original_ExchangeRate));
            if ((Original_LocationAccountCode == null)) {
                throw new global::System.ArgumentNullException("Original_LocationAccountCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_LocationAccountCode));
            }
            if ((Original_LocationAccountName == null)) {
                throw new global::System.ArgumentNullException("Original_LocationAccountName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_LocationAccountName));
            }
            if ((Original_VendorAccountCode == null)) {
                throw new global::System.ArgumentNullException("Original_VendorAccountCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_VendorAccountCode));
            }
            if ((Original_VendorAccountName == null)) {
                throw new global::System.ArgumentNullException("Original_VendorAccountName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_VendorAccountName));
            }
            if ((Original_Remark == null)) {
                throw new global::System.ArgumentNullException("Original_Remark");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_Remark));
            }
            if ((Original_Created_By == null)) {
                throw new global::System.ArgumentNullException("Original_Created_By");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_Created_By));
            }
            this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_TotalCost));
            if ((Original_TrsDocID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((int)(Original_TrsDocID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_TrsDocLine.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_TrsDocLine.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_DocTypeID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_DocTypeID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_DocID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((int)(Original_DocID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_DocLine.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((int)(Original_DocLine.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_DocDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((System.DateTime)(Original_DocDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceDocTypeID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_SourceDocTypeID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceDocID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_SourceDocID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceDocLine.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_SourceDocLine.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_TrsUnionID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_TrsUnionID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_DocTypeDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_DocTypeDesc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int TrsTypeID, 
                    string TrsTypeDesc, 
                    global::System.Nullable<global::System.DateTime> TrsDate, 
                    string ReferenceCode, 
                    int ReferenceSrNo, 
                    int LotID, 
                    int ItemID, 
                    string LotName, 
                    string ParcelOrStone, 
                    string NaturalOrLabGrown, 
                    int CertificateID, 
                    string CertificateLabName, 
                    string CertificateType, 
                    string CertificateNo, 
                    string Shape, 
                    string Size, 
                    string Color, 
                    string Clarity, 
                    decimal OriginalWeight, 
                    decimal WeightIn, 
                    decimal WeightOut, 
                    decimal WeightBalance, 
                    decimal WeightLoss, 
                    decimal ScrapWeight, 
                    decimal Cost, 
                    decimal TrsTotalCost, 
                    decimal ParcelAvgCost, 
                    decimal ListCostDiscount, 
                    decimal List, 
                    decimal TotalList, 
                    decimal ListSaleDiscount, 
                    decimal Sale, 
                    decimal TotalSale, 
                    decimal GBPSale, 
                    decimal GBPTotalSale, 
                    decimal OutList, 
                    decimal ListOutDiscount, 
                    decimal OutPrice, 
                    decimal OutTotalPrice, 
                    decimal GBPOutPrice, 
                    decimal GBPOutTotalPrice, 
                    decimal ExchangeRate, 
                    string LocationAccountCode, 
                    string LocationAccountName, 
                    string VendorAccountCode, 
                    string VendorAccountName, 
                    string Remark, 
                    string Created_By, 
                    decimal TotalCost, 
                    global::System.Nullable<int> TrsDocID, 
                    global::System.Nullable<int> TrsDocLine, 
                    global::System.Nullable<int> DocTypeID, 
                    global::System.Nullable<int> DocID, 
                    global::System.Nullable<int> DocLine, 
                    global::System.Nullable<global::System.DateTime> DocDate, 
                    global::System.Nullable<int> SourceDocTypeID, 
                    global::System.Nullable<int> SourceDocID, 
                    global::System.Nullable<int> SourceDocLine, 
                    global::System.Nullable<int> TrsUnionID, 
                    string DocTypeDesc) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(TrsTypeID));
            if ((TrsTypeDesc == null)) {
                throw new global::System.ArgumentNullException("TrsTypeDesc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TrsTypeDesc));
            }
            if ((TrsDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(TrsDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ReferenceCode == null)) {
                throw new global::System.ArgumentNullException("ReferenceCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ReferenceCode));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ReferenceSrNo));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(LotID));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ItemID));
            if ((LotName == null)) {
                throw new global::System.ArgumentNullException("LotName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(LotName));
            }
            if ((ParcelOrStone == null)) {
                throw new global::System.ArgumentNullException("ParcelOrStone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ParcelOrStone));
            }
            if ((NaturalOrLabGrown == null)) {
                throw new global::System.ArgumentNullException("NaturalOrLabGrown");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(NaturalOrLabGrown));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(CertificateID));
            if ((CertificateLabName == null)) {
                throw new global::System.ArgumentNullException("CertificateLabName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CertificateLabName));
            }
            if ((CertificateType == null)) {
                throw new global::System.ArgumentNullException("CertificateType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(CertificateType));
            }
            if ((CertificateNo == null)) {
                throw new global::System.ArgumentNullException("CertificateNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CertificateNo));
            }
            if ((Shape == null)) {
                throw new global::System.ArgumentNullException("Shape");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Shape));
            }
            if ((Size == null)) {
                throw new global::System.ArgumentNullException("Size");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Size));
            }
            if ((Color == null)) {
                throw new global::System.ArgumentNullException("Color");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Color));
            }
            if ((Clarity == null)) {
                throw new global::System.ArgumentNullException("Clarity");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Clarity));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(OriginalWeight));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(WeightIn));
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(WeightOut));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(WeightBalance));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(WeightLoss));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(ScrapWeight));
            this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(Cost));
            this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(TrsTotalCost));
            this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(ParcelAvgCost));
            this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(ListCostDiscount));
            this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(List));
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(TotalList));
            this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(ListSaleDiscount));
            this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(Sale));
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(TotalSale));
            this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(GBPSale));
            this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(GBPTotalSale));
            this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(OutList));
            this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(ListOutDiscount));
            this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(OutPrice));
            this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(OutTotalPrice));
            this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(GBPOutPrice));
            this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(GBPOutTotalPrice));
            this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(ExchangeRate));
            if ((LocationAccountCode == null)) {
                throw new global::System.ArgumentNullException("LocationAccountCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(LocationAccountCode));
            }
            if ((LocationAccountName == null)) {
                throw new global::System.ArgumentNullException("LocationAccountName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(LocationAccountName));
            }
            if ((VendorAccountCode == null)) {
                throw new global::System.ArgumentNullException("VendorAccountCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(VendorAccountCode));
            }
            if ((VendorAccountName == null)) {
                throw new global::System.ArgumentNullException("VendorAccountName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(VendorAccountName));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(Remark));
            }
            if ((Created_By == null)) {
                throw new global::System.ArgumentNullException("Created_By");
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(Created_By));
            }
            this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(TotalCost));
            if ((TrsDocID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((int)(TrsDocID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((TrsDocLine.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((int)(TrsDocLine.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DocTypeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((int)(DocTypeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((DocID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((int)(DocID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((DocLine.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((int)(DocLine.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((DocDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(DocDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((SourceDocTypeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((int)(SourceDocTypeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((SourceDocID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((int)(SourceDocID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((SourceDocLine.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(SourceDocLine.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((TrsUnionID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((int)(TrsUnionID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((DocTypeDesc == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(DocTypeDesc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int TrsTypeID, 
                    string TrsTypeDesc, 
                    global::System.Nullable<global::System.DateTime> TrsDate, 
                    string ReferenceCode, 
                    int ReferenceSrNo, 
                    int LotID, 
                    int ItemID, 
                    string LotName, 
                    string ParcelOrStone, 
                    string NaturalOrLabGrown, 
                    int CertificateID, 
                    string CertificateLabName, 
                    string CertificateType, 
                    string CertificateNo, 
                    string Shape, 
                    string Size, 
                    string Color, 
                    string Clarity, 
                    decimal OriginalWeight, 
                    decimal WeightIn, 
                    decimal WeightOut, 
                    decimal WeightBalance, 
                    decimal WeightLoss, 
                    decimal ScrapWeight, 
                    decimal Cost, 
                    decimal TrsTotalCost, 
                    decimal ParcelAvgCost, 
                    decimal ListCostDiscount, 
                    decimal List, 
                    decimal TotalList, 
                    decimal ListSaleDiscount, 
                    decimal Sale, 
                    decimal TotalSale, 
                    decimal GBPSale, 
                    decimal GBPTotalSale, 
                    decimal OutList, 
                    decimal ListOutDiscount, 
                    decimal OutPrice, 
                    decimal OutTotalPrice, 
                    decimal GBPOutPrice, 
                    decimal GBPOutTotalPrice, 
                    decimal ExchangeRate, 
                    string LocationAccountCode, 
                    string LocationAccountName, 
                    string VendorAccountCode, 
                    string VendorAccountName, 
                    string Remark, 
                    string Created_By, 
                    decimal TotalCost, 
                    global::System.Nullable<int> TrsDocID, 
                    global::System.Nullable<int> TrsDocLine, 
                    global::System.Nullable<int> DocTypeID, 
                    global::System.Nullable<int> DocID, 
                    global::System.Nullable<int> DocLine, 
                    global::System.Nullable<global::System.DateTime> DocDate, 
                    global::System.Nullable<int> SourceDocTypeID, 
                    global::System.Nullable<int> SourceDocID, 
                    global::System.Nullable<int> SourceDocLine, 
                    global::System.Nullable<int> TrsUnionID, 
                    string DocTypeDesc, 
                    int Original_TrsID, 
                    int Original_TrsTypeID, 
                    string Original_TrsTypeDesc, 
                    global::System.Nullable<global::System.DateTime> Original_TrsDate, 
                    string Original_ReferenceCode, 
                    int Original_ReferenceSrNo, 
                    int Original_LotID, 
                    int Original_ItemID, 
                    string Original_LotName, 
                    string Original_ParcelOrStone, 
                    string Original_NaturalOrLabGrown, 
                    int Original_CertificateID, 
                    string Original_CertificateLabName, 
                    string Original_CertificateType, 
                    string Original_CertificateNo, 
                    string Original_Shape, 
                    string Original_Size, 
                    string Original_Color, 
                    string Original_Clarity, 
                    decimal Original_OriginalWeight, 
                    decimal Original_WeightIn, 
                    decimal Original_WeightOut, 
                    decimal Original_WeightBalance, 
                    decimal Original_WeightLoss, 
                    decimal Original_ScrapWeight, 
                    decimal Original_Cost, 
                    decimal Original_TrsTotalCost, 
                    decimal Original_ParcelAvgCost, 
                    decimal Original_ListCostDiscount, 
                    decimal Original_List, 
                    decimal Original_TotalList, 
                    decimal Original_ListSaleDiscount, 
                    decimal Original_Sale, 
                    decimal Original_TotalSale, 
                    decimal Original_GBPSale, 
                    decimal Original_GBPTotalSale, 
                    decimal Original_OutList, 
                    decimal Original_ListOutDiscount, 
                    decimal Original_OutPrice, 
                    decimal Original_OutTotalPrice, 
                    decimal Original_GBPOutPrice, 
                    decimal Original_GBPOutTotalPrice, 
                    decimal Original_ExchangeRate, 
                    string Original_LocationAccountCode, 
                    string Original_LocationAccountName, 
                    string Original_VendorAccountCode, 
                    string Original_VendorAccountName, 
                    string Original_Remark, 
                    string Original_Created_By, 
                    decimal Original_TotalCost, 
                    global::System.Nullable<int> Original_TrsDocID, 
                    global::System.Nullable<int> Original_TrsDocLine, 
                    global::System.Nullable<int> Original_DocTypeID, 
                    global::System.Nullable<int> Original_DocID, 
                    global::System.Nullable<int> Original_DocLine, 
                    global::System.Nullable<global::System.DateTime> Original_DocDate, 
                    global::System.Nullable<int> Original_SourceDocTypeID, 
                    global::System.Nullable<int> Original_SourceDocID, 
                    global::System.Nullable<int> Original_SourceDocLine, 
                    global::System.Nullable<int> Original_TrsUnionID, 
                    string Original_DocTypeDesc, 
                    int TrsID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(TrsTypeID));
            if ((TrsTypeDesc == null)) {
                throw new global::System.ArgumentNullException("TrsTypeDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TrsTypeDesc));
            }
            if ((TrsDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(TrsDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ReferenceCode == null)) {
                throw new global::System.ArgumentNullException("ReferenceCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ReferenceCode));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ReferenceSrNo));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(LotID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ItemID));
            if ((LotName == null)) {
                throw new global::System.ArgumentNullException("LotName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(LotName));
            }
            if ((ParcelOrStone == null)) {
                throw new global::System.ArgumentNullException("ParcelOrStone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ParcelOrStone));
            }
            if ((NaturalOrLabGrown == null)) {
                throw new global::System.ArgumentNullException("NaturalOrLabGrown");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(NaturalOrLabGrown));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(CertificateID));
            if ((CertificateLabName == null)) {
                throw new global::System.ArgumentNullException("CertificateLabName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CertificateLabName));
            }
            if ((CertificateType == null)) {
                throw new global::System.ArgumentNullException("CertificateType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(CertificateType));
            }
            if ((CertificateNo == null)) {
                throw new global::System.ArgumentNullException("CertificateNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CertificateNo));
            }
            if ((Shape == null)) {
                throw new global::System.ArgumentNullException("Shape");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Shape));
            }
            if ((Size == null)) {
                throw new global::System.ArgumentNullException("Size");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Size));
            }
            if ((Color == null)) {
                throw new global::System.ArgumentNullException("Color");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Color));
            }
            if ((Clarity == null)) {
                throw new global::System.ArgumentNullException("Clarity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Clarity));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(OriginalWeight));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(WeightIn));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(WeightOut));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(WeightBalance));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(WeightLoss));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(ScrapWeight));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Cost));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(TrsTotalCost));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(ParcelAvgCost));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(ListCostDiscount));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(List));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(TotalList));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(ListSaleDiscount));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Sale));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(TotalSale));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(GBPSale));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(GBPTotalSale));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(OutList));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(ListOutDiscount));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(OutPrice));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(OutTotalPrice));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(GBPOutPrice));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(GBPOutTotalPrice));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(ExchangeRate));
            if ((LocationAccountCode == null)) {
                throw new global::System.ArgumentNullException("LocationAccountCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(LocationAccountCode));
            }
            if ((LocationAccountName == null)) {
                throw new global::System.ArgumentNullException("LocationAccountName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(LocationAccountName));
            }
            if ((VendorAccountCode == null)) {
                throw new global::System.ArgumentNullException("VendorAccountCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(VendorAccountCode));
            }
            if ((VendorAccountName == null)) {
                throw new global::System.ArgumentNullException("VendorAccountName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(VendorAccountName));
            }
            if ((Remark == null)) {
                throw new global::System.ArgumentNullException("Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Remark));
            }
            if ((Created_By == null)) {
                throw new global::System.ArgumentNullException("Created_By");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Created_By));
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(TotalCost));
            if ((TrsDocID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(TrsDocID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((TrsDocLine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(TrsDocLine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DocTypeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(DocTypeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((DocID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(DocID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((DocLine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(DocLine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((DocDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(DocDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((SourceDocTypeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(SourceDocTypeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((SourceDocID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(SourceDocID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((SourceDocLine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(SourceDocLine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((TrsUnionID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(TrsUnionID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((DocTypeDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(DocTypeDesc));
            }
            this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_TrsID));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Original_TrsTypeID));
            if ((Original_TrsTypeDesc == null)) {
                throw new global::System.ArgumentNullException("Original_TrsTypeDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_TrsTypeDesc));
            }
            if ((Original_TrsDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((System.DateTime)(Original_TrsDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_ReferenceCode == null)) {
                throw new global::System.ArgumentNullException("Original_ReferenceCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_ReferenceCode));
            }
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_ReferenceSrNo));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(Original_LotID));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_ItemID));
            if ((Original_LotName == null)) {
                throw new global::System.ArgumentNullException("Original_LotName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_LotName));
            }
            if ((Original_ParcelOrStone == null)) {
                throw new global::System.ArgumentNullException("Original_ParcelOrStone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_ParcelOrStone));
            }
            if ((Original_NaturalOrLabGrown == null)) {
                throw new global::System.ArgumentNullException("Original_NaturalOrLabGrown");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_NaturalOrLabGrown));
            }
            this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Original_CertificateID));
            if ((Original_CertificateLabName == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateLabName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_CertificateLabName));
            }
            if ((Original_CertificateType == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_CertificateType));
            }
            if ((Original_CertificateNo == null)) {
                throw new global::System.ArgumentNullException("Original_CertificateNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_CertificateNo));
            }
            if ((Original_Shape == null)) {
                throw new global::System.ArgumentNullException("Original_Shape");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_Shape));
            }
            if ((Original_Size == null)) {
                throw new global::System.ArgumentNullException("Original_Size");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_Size));
            }
            if ((Original_Color == null)) {
                throw new global::System.ArgumentNullException("Original_Color");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_Color));
            }
            if ((Original_Clarity == null)) {
                throw new global::System.ArgumentNullException("Original_Clarity");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_Clarity));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(Original_OriginalWeight));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((decimal)(Original_WeightIn));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(Original_WeightOut));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(Original_WeightBalance));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(Original_WeightLoss));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_ScrapWeight));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(Original_Cost));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_TrsTotalCost));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(Original_ParcelAvgCost));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(Original_ListCostDiscount));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(Original_List));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(Original_TotalList));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((decimal)(Original_ListSaleDiscount));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_Sale));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((decimal)(Original_TotalSale));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((decimal)(Original_GBPSale));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((decimal)(Original_GBPTotalSale));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_OutList));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((decimal)(Original_ListOutDiscount));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_OutPrice));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((decimal)(Original_OutTotalPrice));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((decimal)(Original_GBPOutPrice));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((decimal)(Original_GBPOutTotalPrice));
            this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(Original_ExchangeRate));
            if ((Original_LocationAccountCode == null)) {
                throw new global::System.ArgumentNullException("Original_LocationAccountCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_LocationAccountCode));
            }
            if ((Original_LocationAccountName == null)) {
                throw new global::System.ArgumentNullException("Original_LocationAccountName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_LocationAccountName));
            }
            if ((Original_VendorAccountCode == null)) {
                throw new global::System.ArgumentNullException("Original_VendorAccountCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_VendorAccountCode));
            }
            if ((Original_VendorAccountName == null)) {
                throw new global::System.ArgumentNullException("Original_VendorAccountName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_VendorAccountName));
            }
            if ((Original_Remark == null)) {
                throw new global::System.ArgumentNullException("Original_Remark");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_Remark));
            }
            if ((Original_Created_By == null)) {
                throw new global::System.ArgumentNullException("Original_Created_By");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_Created_By));
            }
            this.Adapter.UpdateCommand.Parameters[110].Value = ((decimal)(Original_TotalCost));
            if ((Original_TrsDocID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((int)(Original_TrsDocID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_TrsDocLine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(Original_TrsDocLine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_DocTypeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((int)(Original_DocTypeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_DocID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(Original_DocID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_DocLine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(Original_DocLine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_DocDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((System.DateTime)(Original_DocDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceDocTypeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((int)(Original_SourceDocTypeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceDocID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((int)(Original_SourceDocID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_SourceDocLine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((int)(Original_SourceDocLine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_TrsUnionID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((int)(Original_TrsUnionID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_DocTypeDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Original_DocTypeDesc));
            }
            this.Adapter.UpdateCommand.Parameters[133].Value = ((int)(TrsID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int TrsTypeID, 
                    string TrsTypeDesc, 
                    global::System.Nullable<global::System.DateTime> TrsDate, 
                    string ReferenceCode, 
                    int ReferenceSrNo, 
                    int LotID, 
                    int ItemID, 
                    string LotName, 
                    string ParcelOrStone, 
                    string NaturalOrLabGrown, 
                    int CertificateID, 
                    string CertificateLabName, 
                    string CertificateType, 
                    string CertificateNo, 
                    string Shape, 
                    string Size, 
                    string Color, 
                    string Clarity, 
                    decimal OriginalWeight, 
                    decimal WeightIn, 
                    decimal WeightOut, 
                    decimal WeightBalance, 
                    decimal WeightLoss, 
                    decimal ScrapWeight, 
                    decimal Cost, 
                    decimal TrsTotalCost, 
                    decimal ParcelAvgCost, 
                    decimal ListCostDiscount, 
                    decimal List, 
                    decimal TotalList, 
                    decimal ListSaleDiscount, 
                    decimal Sale, 
                    decimal TotalSale, 
                    decimal GBPSale, 
                    decimal GBPTotalSale, 
                    decimal OutList, 
                    decimal ListOutDiscount, 
                    decimal OutPrice, 
                    decimal OutTotalPrice, 
                    decimal GBPOutPrice, 
                    decimal GBPOutTotalPrice, 
                    decimal ExchangeRate, 
                    string LocationAccountCode, 
                    string LocationAccountName, 
                    string VendorAccountCode, 
                    string VendorAccountName, 
                    string Remark, 
                    string Created_By, 
                    decimal TotalCost, 
                    global::System.Nullable<int> TrsDocID, 
                    global::System.Nullable<int> TrsDocLine, 
                    global::System.Nullable<int> DocTypeID, 
                    global::System.Nullable<int> DocID, 
                    global::System.Nullable<int> DocLine, 
                    global::System.Nullable<global::System.DateTime> DocDate, 
                    global::System.Nullable<int> SourceDocTypeID, 
                    global::System.Nullable<int> SourceDocID, 
                    global::System.Nullable<int> SourceDocLine, 
                    global::System.Nullable<int> TrsUnionID, 
                    string DocTypeDesc, 
                    int Original_TrsID, 
                    int Original_TrsTypeID, 
                    string Original_TrsTypeDesc, 
                    global::System.Nullable<global::System.DateTime> Original_TrsDate, 
                    string Original_ReferenceCode, 
                    int Original_ReferenceSrNo, 
                    int Original_LotID, 
                    int Original_ItemID, 
                    string Original_LotName, 
                    string Original_ParcelOrStone, 
                    string Original_NaturalOrLabGrown, 
                    int Original_CertificateID, 
                    string Original_CertificateLabName, 
                    string Original_CertificateType, 
                    string Original_CertificateNo, 
                    string Original_Shape, 
                    string Original_Size, 
                    string Original_Color, 
                    string Original_Clarity, 
                    decimal Original_OriginalWeight, 
                    decimal Original_WeightIn, 
                    decimal Original_WeightOut, 
                    decimal Original_WeightBalance, 
                    decimal Original_WeightLoss, 
                    decimal Original_ScrapWeight, 
                    decimal Original_Cost, 
                    decimal Original_TrsTotalCost, 
                    decimal Original_ParcelAvgCost, 
                    decimal Original_ListCostDiscount, 
                    decimal Original_List, 
                    decimal Original_TotalList, 
                    decimal Original_ListSaleDiscount, 
                    decimal Original_Sale, 
                    decimal Original_TotalSale, 
                    decimal Original_GBPSale, 
                    decimal Original_GBPTotalSale, 
                    decimal Original_OutList, 
                    decimal Original_ListOutDiscount, 
                    decimal Original_OutPrice, 
                    decimal Original_OutTotalPrice, 
                    decimal Original_GBPOutPrice, 
                    decimal Original_GBPOutTotalPrice, 
                    decimal Original_ExchangeRate, 
                    string Original_LocationAccountCode, 
                    string Original_LocationAccountName, 
                    string Original_VendorAccountCode, 
                    string Original_VendorAccountName, 
                    string Original_Remark, 
                    string Original_Created_By, 
                    decimal Original_TotalCost, 
                    global::System.Nullable<int> Original_TrsDocID, 
                    global::System.Nullable<int> Original_TrsDocLine, 
                    global::System.Nullable<int> Original_DocTypeID, 
                    global::System.Nullable<int> Original_DocID, 
                    global::System.Nullable<int> Original_DocLine, 
                    global::System.Nullable<global::System.DateTime> Original_DocDate, 
                    global::System.Nullable<int> Original_SourceDocTypeID, 
                    global::System.Nullable<int> Original_SourceDocID, 
                    global::System.Nullable<int> Original_SourceDocLine, 
                    global::System.Nullable<int> Original_TrsUnionID, 
                    string Original_DocTypeDesc) {
            return this.Update(TrsTypeID, TrsTypeDesc, TrsDate, ReferenceCode, ReferenceSrNo, LotID, ItemID, LotName, ParcelOrStone, NaturalOrLabGrown, CertificateID, CertificateLabName, CertificateType, CertificateNo, Shape, Size, Color, Clarity, OriginalWeight, WeightIn, WeightOut, WeightBalance, WeightLoss, ScrapWeight, Cost, TrsTotalCost, ParcelAvgCost, ListCostDiscount, List, TotalList, ListSaleDiscount, Sale, TotalSale, GBPSale, GBPTotalSale, OutList, ListOutDiscount, OutPrice, OutTotalPrice, GBPOutPrice, GBPOutTotalPrice, ExchangeRate, LocationAccountCode, LocationAccountName, VendorAccountCode, VendorAccountName, Remark, Created_By, TotalCost, TrsDocID, TrsDocLine, DocTypeID, DocID, DocLine, DocDate, SourceDocTypeID, SourceDocID, SourceDocLine, TrsUnionID, DocTypeDesc, Original_TrsID, Original_TrsTypeID, Original_TrsTypeDesc, Original_TrsDate, Original_ReferenceCode, Original_ReferenceSrNo, Original_LotID, Original_ItemID, Original_LotName, Original_ParcelOrStone, Original_NaturalOrLabGrown, Original_CertificateID, Original_CertificateLabName, Original_CertificateType, Original_CertificateNo, Original_Shape, Original_Size, Original_Color, Original_Clarity, Original_OriginalWeight, Original_WeightIn, Original_WeightOut, Original_WeightBalance, Original_WeightLoss, Original_ScrapWeight, Original_Cost, Original_TrsTotalCost, Original_ParcelAvgCost, Original_ListCostDiscount, Original_List, Original_TotalList, Original_ListSaleDiscount, Original_Sale, Original_TotalSale, Original_GBPSale, Original_GBPTotalSale, Original_OutList, Original_ListOutDiscount, Original_OutPrice, Original_OutTotalPrice, Original_GBPOutPrice, Original_GBPOutTotalPrice, Original_ExchangeRate, Original_LocationAccountCode, Original_LocationAccountName, Original_VendorAccountCode, Original_VendorAccountName, Original_Remark, Original_Created_By, Original_TotalCost, Original_TrsDocID, Original_TrsDocLine, Original_DocTypeID, Original_DocID, Original_DocLine, Original_DocDate, Original_SourceDocTypeID, Original_SourceDocID, Original_SourceDocLine, Original_TrsUnionID, Original_DocTypeDesc, Original_TrsID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private THXADiamondLotTableAdapter _tHXADiamondLotTableAdapter;
        
        private THXADiamondPriceStockHistoryTableAdapter _tHXADiamondPriceStockHistoryTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public THXADiamondLotTableAdapter THXADiamondLotTableAdapter {
            get {
                return this._tHXADiamondLotTableAdapter;
            }
            set {
                this._tHXADiamondLotTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public THXADiamondPriceStockHistoryTableAdapter THXADiamondPriceStockHistoryTableAdapter {
            get {
                return this._tHXADiamondPriceStockHistoryTableAdapter;
            }
            set {
                this._tHXADiamondPriceStockHistoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tHXADiamondLotTableAdapter != null) 
                            && (this._tHXADiamondLotTableAdapter.Connection != null))) {
                    return this._tHXADiamondLotTableAdapter.Connection;
                }
                if (((this._tHXADiamondPriceStockHistoryTableAdapter != null) 
                            && (this._tHXADiamondPriceStockHistoryTableAdapter.Connection != null))) {
                    return this._tHXADiamondPriceStockHistoryTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tHXADiamondLotTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tHXADiamondPriceStockHistoryTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(DevTHLStoreDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tHXADiamondLotTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.THXADiamondLot.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tHXADiamondLotTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tHXADiamondPriceStockHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.THXADiamondPriceStockHistory.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tHXADiamondPriceStockHistoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(DevTHLStoreDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tHXADiamondLotTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.THXADiamondLot.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tHXADiamondLotTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tHXADiamondPriceStockHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.THXADiamondPriceStockHistory.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tHXADiamondPriceStockHistoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(DevTHLStoreDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tHXADiamondPriceStockHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.THXADiamondPriceStockHistory.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tHXADiamondPriceStockHistoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tHXADiamondLotTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.THXADiamondLot.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tHXADiamondLotTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(DevTHLStoreDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tHXADiamondLotTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tHXADiamondLotTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tHXADiamondPriceStockHistoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tHXADiamondPriceStockHistoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tHXADiamondLotTableAdapter != null)) {
                    revertConnections.Add(this._tHXADiamondLotTableAdapter, this._tHXADiamondLotTableAdapter.Connection);
                    this._tHXADiamondLotTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tHXADiamondLotTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tHXADiamondLotTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tHXADiamondLotTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tHXADiamondLotTableAdapter.Adapter);
                    }
                }
                if ((this._tHXADiamondPriceStockHistoryTableAdapter != null)) {
                    revertConnections.Add(this._tHXADiamondPriceStockHistoryTableAdapter, this._tHXADiamondPriceStockHistoryTableAdapter.Connection);
                    this._tHXADiamondPriceStockHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tHXADiamondPriceStockHistoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tHXADiamondPriceStockHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tHXADiamondPriceStockHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tHXADiamondPriceStockHistoryTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tHXADiamondLotTableAdapter != null)) {
                    this._tHXADiamondLotTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tHXADiamondLotTableAdapter]));
                    this._tHXADiamondLotTableAdapter.Transaction = null;
                }
                if ((this._tHXADiamondPriceStockHistoryTableAdapter != null)) {
                    this._tHXADiamondPriceStockHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tHXADiamondPriceStockHistoryTableAdapter]));
                    this._tHXADiamondPriceStockHistoryTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591